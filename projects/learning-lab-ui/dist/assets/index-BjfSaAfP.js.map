{"version":3,"file":"index-BjfSaAfP.js","sources":["../../node_modules/marked/lib/marked.esm.js","../../node_modules/dompurify/dist/purify.es.mjs","../../src/main.js"],"sourcesContent":["/**\n * marked v11.2.0 - a markdown parser\n * Copyright (c) 2011-2024, Christopher Jeffrey. (MIT Licensed)\n * https://github.com/markedjs/marked\n */\n\n/**\n * DO NOT EDIT THIS FILE\n * The code in this file is generated from files in ./src/\n */\n\n/**\n * Gets the original marked default options.\n */\nfunction _getDefaults() {\n    return {\n        async: false,\n        breaks: false,\n        extensions: null,\n        gfm: true,\n        hooks: null,\n        pedantic: false,\n        renderer: null,\n        silent: false,\n        tokenizer: null,\n        walkTokens: null\n    };\n}\nlet _defaults = _getDefaults();\nfunction changeDefaults(newDefaults) {\n    _defaults = newDefaults;\n}\n\n/**\n * Helpers\n */\nconst escapeTest = /[&<>\"']/;\nconst escapeReplace = new RegExp(escapeTest.source, 'g');\nconst escapeTestNoEncode = /[<>\"']|&(?!(#\\d{1,7}|#[Xx][a-fA-F0-9]{1,6}|\\w+);)/;\nconst escapeReplaceNoEncode = new RegExp(escapeTestNoEncode.source, 'g');\nconst escapeReplacements = {\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;',\n    '\"': '&quot;',\n    \"'\": '&#39;'\n};\nconst getEscapeReplacement = (ch) => escapeReplacements[ch];\nfunction escape$1(html, encode) {\n    if (encode) {\n        if (escapeTest.test(html)) {\n            return html.replace(escapeReplace, getEscapeReplacement);\n        }\n    }\n    else {\n        if (escapeTestNoEncode.test(html)) {\n            return html.replace(escapeReplaceNoEncode, getEscapeReplacement);\n        }\n    }\n    return html;\n}\nconst unescapeTest = /&(#(?:\\d+)|(?:#x[0-9A-Fa-f]+)|(?:\\w+));?/ig;\nfunction unescape(html) {\n    // explicitly match decimal, hex, and named HTML entities\n    return html.replace(unescapeTest, (_, n) => {\n        n = n.toLowerCase();\n        if (n === 'colon')\n            return ':';\n        if (n.charAt(0) === '#') {\n            return n.charAt(1) === 'x'\n                ? String.fromCharCode(parseInt(n.substring(2), 16))\n                : String.fromCharCode(+n.substring(1));\n        }\n        return '';\n    });\n}\nconst caret = /(^|[^\\[])\\^/g;\nfunction edit(regex, opt) {\n    let source = typeof regex === 'string' ? regex : regex.source;\n    opt = opt || '';\n    const obj = {\n        replace: (name, val) => {\n            let valSource = typeof val === 'string' ? val : val.source;\n            valSource = valSource.replace(caret, '$1');\n            source = source.replace(name, valSource);\n            return obj;\n        },\n        getRegex: () => {\n            return new RegExp(source, opt);\n        }\n    };\n    return obj;\n}\nfunction cleanUrl(href) {\n    try {\n        href = encodeURI(href).replace(/%25/g, '%');\n    }\n    catch (e) {\n        return null;\n    }\n    return href;\n}\nconst noopTest = { exec: () => null };\nfunction splitCells(tableRow, count) {\n    // ensure that every cell-delimiting pipe has a space\n    // before it to distinguish it from an escaped pipe\n    const row = tableRow.replace(/\\|/g, (match, offset, str) => {\n        let escaped = false;\n        let curr = offset;\n        while (--curr >= 0 && str[curr] === '\\\\')\n            escaped = !escaped;\n        if (escaped) {\n            // odd number of slashes means | is escaped\n            // so we leave it alone\n            return '|';\n        }\n        else {\n            // add space before unescaped |\n            return ' |';\n        }\n    }), cells = row.split(/ \\|/);\n    let i = 0;\n    // First/last cell in a row cannot be empty if it has no leading/trailing pipe\n    if (!cells[0].trim()) {\n        cells.shift();\n    }\n    if (cells.length > 0 && !cells[cells.length - 1].trim()) {\n        cells.pop();\n    }\n    if (count) {\n        if (cells.length > count) {\n            cells.splice(count);\n        }\n        else {\n            while (cells.length < count)\n                cells.push('');\n        }\n    }\n    for (; i < cells.length; i++) {\n        // leading or trailing whitespace is ignored per the gfm spec\n        cells[i] = cells[i].trim().replace(/\\\\\\|/g, '|');\n    }\n    return cells;\n}\n/**\n * Remove trailing 'c's. Equivalent to str.replace(/c*$/, '').\n * /c*$/ is vulnerable to REDOS.\n *\n * @param str\n * @param c\n * @param invert Remove suffix of non-c chars instead. Default falsey.\n */\nfunction rtrim(str, c, invert) {\n    const l = str.length;\n    if (l === 0) {\n        return '';\n    }\n    // Length of suffix matching the invert condition.\n    let suffLen = 0;\n    // Step left until we fail to match the invert condition.\n    while (suffLen < l) {\n        const currChar = str.charAt(l - suffLen - 1);\n        if (currChar === c && !invert) {\n            suffLen++;\n        }\n        else if (currChar !== c && invert) {\n            suffLen++;\n        }\n        else {\n            break;\n        }\n    }\n    return str.slice(0, l - suffLen);\n}\nfunction findClosingBracket(str, b) {\n    if (str.indexOf(b[1]) === -1) {\n        return -1;\n    }\n    let level = 0;\n    for (let i = 0; i < str.length; i++) {\n        if (str[i] === '\\\\') {\n            i++;\n        }\n        else if (str[i] === b[0]) {\n            level++;\n        }\n        else if (str[i] === b[1]) {\n            level--;\n            if (level < 0) {\n                return i;\n            }\n        }\n    }\n    return -1;\n}\n\nfunction outputLink(cap, link, raw, lexer) {\n    const href = link.href;\n    const title = link.title ? escape$1(link.title) : null;\n    const text = cap[1].replace(/\\\\([\\[\\]])/g, '$1');\n    if (cap[0].charAt(0) !== '!') {\n        lexer.state.inLink = true;\n        const token = {\n            type: 'link',\n            raw,\n            href,\n            title,\n            text,\n            tokens: lexer.inlineTokens(text)\n        };\n        lexer.state.inLink = false;\n        return token;\n    }\n    return {\n        type: 'image',\n        raw,\n        href,\n        title,\n        text: escape$1(text)\n    };\n}\nfunction indentCodeCompensation(raw, text) {\n    const matchIndentToCode = raw.match(/^(\\s+)(?:```)/);\n    if (matchIndentToCode === null) {\n        return text;\n    }\n    const indentToCode = matchIndentToCode[1];\n    return text\n        .split('\\n')\n        .map(node => {\n        const matchIndentInNode = node.match(/^\\s+/);\n        if (matchIndentInNode === null) {\n            return node;\n        }\n        const [indentInNode] = matchIndentInNode;\n        if (indentInNode.length >= indentToCode.length) {\n            return node.slice(indentToCode.length);\n        }\n        return node;\n    })\n        .join('\\n');\n}\n/**\n * Tokenizer\n */\nclass _Tokenizer {\n    options;\n    rules; // set by the lexer\n    lexer; // set by the lexer\n    constructor(options) {\n        this.options = options || _defaults;\n    }\n    space(src) {\n        const cap = this.rules.block.newline.exec(src);\n        if (cap && cap[0].length > 0) {\n            return {\n                type: 'space',\n                raw: cap[0]\n            };\n        }\n    }\n    code(src) {\n        const cap = this.rules.block.code.exec(src);\n        if (cap) {\n            const text = cap[0].replace(/^ {1,4}/gm, '');\n            return {\n                type: 'code',\n                raw: cap[0],\n                codeBlockStyle: 'indented',\n                text: !this.options.pedantic\n                    ? rtrim(text, '\\n')\n                    : text\n            };\n        }\n    }\n    fences(src) {\n        const cap = this.rules.block.fences.exec(src);\n        if (cap) {\n            const raw = cap[0];\n            const text = indentCodeCompensation(raw, cap[3] || '');\n            return {\n                type: 'code',\n                raw,\n                lang: cap[2] ? cap[2].trim().replace(this.rules.inline.anyPunctuation, '$1') : cap[2],\n                text\n            };\n        }\n    }\n    heading(src) {\n        const cap = this.rules.block.heading.exec(src);\n        if (cap) {\n            let text = cap[2].trim();\n            // remove trailing #s\n            if (/#$/.test(text)) {\n                const trimmed = rtrim(text, '#');\n                if (this.options.pedantic) {\n                    text = trimmed.trim();\n                }\n                else if (!trimmed || / $/.test(trimmed)) {\n                    // CommonMark requires space before trailing #s\n                    text = trimmed.trim();\n                }\n            }\n            return {\n                type: 'heading',\n                raw: cap[0],\n                depth: cap[1].length,\n                text,\n                tokens: this.lexer.inline(text)\n            };\n        }\n    }\n    hr(src) {\n        const cap = this.rules.block.hr.exec(src);\n        if (cap) {\n            return {\n                type: 'hr',\n                raw: cap[0]\n            };\n        }\n    }\n    blockquote(src) {\n        const cap = this.rules.block.blockquote.exec(src);\n        if (cap) {\n            const text = rtrim(cap[0].replace(/^ *>[ \\t]?/gm, ''), '\\n');\n            const top = this.lexer.state.top;\n            this.lexer.state.top = true;\n            const tokens = this.lexer.blockTokens(text);\n            this.lexer.state.top = top;\n            return {\n                type: 'blockquote',\n                raw: cap[0],\n                tokens,\n                text\n            };\n        }\n    }\n    list(src) {\n        let cap = this.rules.block.list.exec(src);\n        if (cap) {\n            let bull = cap[1].trim();\n            const isordered = bull.length > 1;\n            const list = {\n                type: 'list',\n                raw: '',\n                ordered: isordered,\n                start: isordered ? +bull.slice(0, -1) : '',\n                loose: false,\n                items: []\n            };\n            bull = isordered ? `\\\\d{1,9}\\\\${bull.slice(-1)}` : `\\\\${bull}`;\n            if (this.options.pedantic) {\n                bull = isordered ? bull : '[*+-]';\n            }\n            // Get next list item\n            const itemRegex = new RegExp(`^( {0,3}${bull})((?:[\\t ][^\\\\n]*)?(?:\\\\n|$))`);\n            let raw = '';\n            let itemContents = '';\n            let endsWithBlankLine = false;\n            // Check if current bullet point can start a new List Item\n            while (src) {\n                let endEarly = false;\n                if (!(cap = itemRegex.exec(src))) {\n                    break;\n                }\n                if (this.rules.block.hr.test(src)) { // End list if bullet was actually HR (possibly move into itemRegex?)\n                    break;\n                }\n                raw = cap[0];\n                src = src.substring(raw.length);\n                let line = cap[2].split('\\n', 1)[0].replace(/^\\t+/, (t) => ' '.repeat(3 * t.length));\n                let nextLine = src.split('\\n', 1)[0];\n                let indent = 0;\n                if (this.options.pedantic) {\n                    indent = 2;\n                    itemContents = line.trimStart();\n                }\n                else {\n                    indent = cap[2].search(/[^ ]/); // Find first non-space char\n                    indent = indent > 4 ? 1 : indent; // Treat indented code blocks (> 4 spaces) as having only 1 indent\n                    itemContents = line.slice(indent);\n                    indent += cap[1].length;\n                }\n                let blankLine = false;\n                if (!line && /^ *$/.test(nextLine)) { // Items begin with at most one blank line\n                    raw += nextLine + '\\n';\n                    src = src.substring(nextLine.length + 1);\n                    endEarly = true;\n                }\n                if (!endEarly) {\n                    const nextBulletRegex = new RegExp(`^ {0,${Math.min(3, indent - 1)}}(?:[*+-]|\\\\d{1,9}[.)])((?:[ \\t][^\\\\n]*)?(?:\\\\n|$))`);\n                    const hrRegex = new RegExp(`^ {0,${Math.min(3, indent - 1)}}((?:- *){3,}|(?:_ *){3,}|(?:\\\\* *){3,})(?:\\\\n+|$)`);\n                    const fencesBeginRegex = new RegExp(`^ {0,${Math.min(3, indent - 1)}}(?:\\`\\`\\`|~~~)`);\n                    const headingBeginRegex = new RegExp(`^ {0,${Math.min(3, indent - 1)}}#`);\n                    // Check if following lines should be included in List Item\n                    while (src) {\n                        const rawLine = src.split('\\n', 1)[0];\n                        nextLine = rawLine;\n                        // Re-align to follow commonmark nesting rules\n                        if (this.options.pedantic) {\n                            nextLine = nextLine.replace(/^ {1,4}(?=( {4})*[^ ])/g, '  ');\n                        }\n                        // End list item if found code fences\n                        if (fencesBeginRegex.test(nextLine)) {\n                            break;\n                        }\n                        // End list item if found start of new heading\n                        if (headingBeginRegex.test(nextLine)) {\n                            break;\n                        }\n                        // End list item if found start of new bullet\n                        if (nextBulletRegex.test(nextLine)) {\n                            break;\n                        }\n                        // Horizontal rule found\n                        if (hrRegex.test(src)) {\n                            break;\n                        }\n                        if (nextLine.search(/[^ ]/) >= indent || !nextLine.trim()) { // Dedent if possible\n                            itemContents += '\\n' + nextLine.slice(indent);\n                        }\n                        else {\n                            // not enough indentation\n                            if (blankLine) {\n                                break;\n                            }\n                            // paragraph continuation unless last line was a different block level element\n                            if (line.search(/[^ ]/) >= 4) { // indented code block\n                                break;\n                            }\n                            if (fencesBeginRegex.test(line)) {\n                                break;\n                            }\n                            if (headingBeginRegex.test(line)) {\n                                break;\n                            }\n                            if (hrRegex.test(line)) {\n                                break;\n                            }\n                            itemContents += '\\n' + nextLine;\n                        }\n                        if (!blankLine && !nextLine.trim()) { // Check if current line is blank\n                            blankLine = true;\n                        }\n                        raw += rawLine + '\\n';\n                        src = src.substring(rawLine.length + 1);\n                        line = nextLine.slice(indent);\n                    }\n                }\n                if (!list.loose) {\n                    // If the previous item ended with a blank line, the list is loose\n                    if (endsWithBlankLine) {\n                        list.loose = true;\n                    }\n                    else if (/\\n *\\n *$/.test(raw)) {\n                        endsWithBlankLine = true;\n                    }\n                }\n                let istask = null;\n                let ischecked;\n                // Check for task list items\n                if (this.options.gfm) {\n                    istask = /^\\[[ xX]\\] /.exec(itemContents);\n                    if (istask) {\n                        ischecked = istask[0] !== '[ ] ';\n                        itemContents = itemContents.replace(/^\\[[ xX]\\] +/, '');\n                    }\n                }\n                list.items.push({\n                    type: 'list_item',\n                    raw,\n                    task: !!istask,\n                    checked: ischecked,\n                    loose: false,\n                    text: itemContents,\n                    tokens: []\n                });\n                list.raw += raw;\n            }\n            // Do not consume newlines at end of final item. Alternatively, make itemRegex *start* with any newlines to simplify/speed up endsWithBlankLine logic\n            list.items[list.items.length - 1].raw = raw.trimEnd();\n            (list.items[list.items.length - 1]).text = itemContents.trimEnd();\n            list.raw = list.raw.trimEnd();\n            // Item child tokens handled here at end because we needed to have the final item to trim it first\n            for (let i = 0; i < list.items.length; i++) {\n                this.lexer.state.top = false;\n                list.items[i].tokens = this.lexer.blockTokens(list.items[i].text, []);\n                if (!list.loose) {\n                    // Check if list should be loose\n                    const spacers = list.items[i].tokens.filter(t => t.type === 'space');\n                    const hasMultipleLineBreaks = spacers.length > 0 && spacers.some(t => /\\n.*\\n/.test(t.raw));\n                    list.loose = hasMultipleLineBreaks;\n                }\n            }\n            // Set all items to loose if list is loose\n            if (list.loose) {\n                for (let i = 0; i < list.items.length; i++) {\n                    list.items[i].loose = true;\n                }\n            }\n            return list;\n        }\n    }\n    html(src) {\n        const cap = this.rules.block.html.exec(src);\n        if (cap) {\n            const token = {\n                type: 'html',\n                block: true,\n                raw: cap[0],\n                pre: cap[1] === 'pre' || cap[1] === 'script' || cap[1] === 'style',\n                text: cap[0]\n            };\n            return token;\n        }\n    }\n    def(src) {\n        const cap = this.rules.block.def.exec(src);\n        if (cap) {\n            const tag = cap[1].toLowerCase().replace(/\\s+/g, ' ');\n            const href = cap[2] ? cap[2].replace(/^<(.*)>$/, '$1').replace(this.rules.inline.anyPunctuation, '$1') : '';\n            const title = cap[3] ? cap[3].substring(1, cap[3].length - 1).replace(this.rules.inline.anyPunctuation, '$1') : cap[3];\n            return {\n                type: 'def',\n                tag,\n                raw: cap[0],\n                href,\n                title\n            };\n        }\n    }\n    table(src) {\n        const cap = this.rules.block.table.exec(src);\n        if (!cap) {\n            return;\n        }\n        if (!/[:|]/.test(cap[2])) {\n            // delimiter row must have a pipe (|) or colon (:) otherwise it is a setext heading\n            return;\n        }\n        const headers = splitCells(cap[1]);\n        const aligns = cap[2].replace(/^\\||\\| *$/g, '').split('|');\n        const rows = cap[3] && cap[3].trim() ? cap[3].replace(/\\n[ \\t]*$/, '').split('\\n') : [];\n        const item = {\n            type: 'table',\n            raw: cap[0],\n            header: [],\n            align: [],\n            rows: []\n        };\n        if (headers.length !== aligns.length) {\n            // header and align columns must be equal, rows can be different.\n            return;\n        }\n        for (const align of aligns) {\n            if (/^ *-+: *$/.test(align)) {\n                item.align.push('right');\n            }\n            else if (/^ *:-+: *$/.test(align)) {\n                item.align.push('center');\n            }\n            else if (/^ *:-+ *$/.test(align)) {\n                item.align.push('left');\n            }\n            else {\n                item.align.push(null);\n            }\n        }\n        for (const header of headers) {\n            item.header.push({\n                text: header,\n                tokens: this.lexer.inline(header)\n            });\n        }\n        for (const row of rows) {\n            item.rows.push(splitCells(row, item.header.length).map(cell => {\n                return {\n                    text: cell,\n                    tokens: this.lexer.inline(cell)\n                };\n            }));\n        }\n        return item;\n    }\n    lheading(src) {\n        const cap = this.rules.block.lheading.exec(src);\n        if (cap) {\n            return {\n                type: 'heading',\n                raw: cap[0],\n                depth: cap[2].charAt(0) === '=' ? 1 : 2,\n                text: cap[1],\n                tokens: this.lexer.inline(cap[1])\n            };\n        }\n    }\n    paragraph(src) {\n        const cap = this.rules.block.paragraph.exec(src);\n        if (cap) {\n            const text = cap[1].charAt(cap[1].length - 1) === '\\n'\n                ? cap[1].slice(0, -1)\n                : cap[1];\n            return {\n                type: 'paragraph',\n                raw: cap[0],\n                text,\n                tokens: this.lexer.inline(text)\n            };\n        }\n    }\n    text(src) {\n        const cap = this.rules.block.text.exec(src);\n        if (cap) {\n            return {\n                type: 'text',\n                raw: cap[0],\n                text: cap[0],\n                tokens: this.lexer.inline(cap[0])\n            };\n        }\n    }\n    escape(src) {\n        const cap = this.rules.inline.escape.exec(src);\n        if (cap) {\n            return {\n                type: 'escape',\n                raw: cap[0],\n                text: escape$1(cap[1])\n            };\n        }\n    }\n    tag(src) {\n        const cap = this.rules.inline.tag.exec(src);\n        if (cap) {\n            if (!this.lexer.state.inLink && /^<a /i.test(cap[0])) {\n                this.lexer.state.inLink = true;\n            }\n            else if (this.lexer.state.inLink && /^<\\/a>/i.test(cap[0])) {\n                this.lexer.state.inLink = false;\n            }\n            if (!this.lexer.state.inRawBlock && /^<(pre|code|kbd|script)(\\s|>)/i.test(cap[0])) {\n                this.lexer.state.inRawBlock = true;\n            }\n            else if (this.lexer.state.inRawBlock && /^<\\/(pre|code|kbd|script)(\\s|>)/i.test(cap[0])) {\n                this.lexer.state.inRawBlock = false;\n            }\n            return {\n                type: 'html',\n                raw: cap[0],\n                inLink: this.lexer.state.inLink,\n                inRawBlock: this.lexer.state.inRawBlock,\n                block: false,\n                text: cap[0]\n            };\n        }\n    }\n    link(src) {\n        const cap = this.rules.inline.link.exec(src);\n        if (cap) {\n            const trimmedUrl = cap[2].trim();\n            if (!this.options.pedantic && /^</.test(trimmedUrl)) {\n                // commonmark requires matching angle brackets\n                if (!(/>$/.test(trimmedUrl))) {\n                    return;\n                }\n                // ending angle bracket cannot be escaped\n                const rtrimSlash = rtrim(trimmedUrl.slice(0, -1), '\\\\');\n                if ((trimmedUrl.length - rtrimSlash.length) % 2 === 0) {\n                    return;\n                }\n            }\n            else {\n                // find closing parenthesis\n                const lastParenIndex = findClosingBracket(cap[2], '()');\n                if (lastParenIndex > -1) {\n                    const start = cap[0].indexOf('!') === 0 ? 5 : 4;\n                    const linkLen = start + cap[1].length + lastParenIndex;\n                    cap[2] = cap[2].substring(0, lastParenIndex);\n                    cap[0] = cap[0].substring(0, linkLen).trim();\n                    cap[3] = '';\n                }\n            }\n            let href = cap[2];\n            let title = '';\n            if (this.options.pedantic) {\n                // split pedantic href and title\n                const link = /^([^'\"]*[^\\s])\\s+(['\"])(.*)\\2/.exec(href);\n                if (link) {\n                    href = link[1];\n                    title = link[3];\n                }\n            }\n            else {\n                title = cap[3] ? cap[3].slice(1, -1) : '';\n            }\n            href = href.trim();\n            if (/^</.test(href)) {\n                if (this.options.pedantic && !(/>$/.test(trimmedUrl))) {\n                    // pedantic allows starting angle bracket without ending angle bracket\n                    href = href.slice(1);\n                }\n                else {\n                    href = href.slice(1, -1);\n                }\n            }\n            return outputLink(cap, {\n                href: href ? href.replace(this.rules.inline.anyPunctuation, '$1') : href,\n                title: title ? title.replace(this.rules.inline.anyPunctuation, '$1') : title\n            }, cap[0], this.lexer);\n        }\n    }\n    reflink(src, links) {\n        let cap;\n        if ((cap = this.rules.inline.reflink.exec(src))\n            || (cap = this.rules.inline.nolink.exec(src))) {\n            const linkString = (cap[2] || cap[1]).replace(/\\s+/g, ' ');\n            const link = links[linkString.toLowerCase()];\n            if (!link) {\n                const text = cap[0].charAt(0);\n                return {\n                    type: 'text',\n                    raw: text,\n                    text\n                };\n            }\n            return outputLink(cap, link, cap[0], this.lexer);\n        }\n    }\n    emStrong(src, maskedSrc, prevChar = '') {\n        let match = this.rules.inline.emStrongLDelim.exec(src);\n        if (!match)\n            return;\n        // _ can't be between two alphanumerics. \\p{L}\\p{N} includes non-english alphabet/numbers as well\n        if (match[3] && prevChar.match(/[\\p{L}\\p{N}]/u))\n            return;\n        const nextChar = match[1] || match[2] || '';\n        if (!nextChar || !prevChar || this.rules.inline.punctuation.exec(prevChar)) {\n            // unicode Regex counts emoji as 1 char; spread into array for proper count (used multiple times below)\n            const lLength = [...match[0]].length - 1;\n            let rDelim, rLength, delimTotal = lLength, midDelimTotal = 0;\n            const endReg = match[0][0] === '*' ? this.rules.inline.emStrongRDelimAst : this.rules.inline.emStrongRDelimUnd;\n            endReg.lastIndex = 0;\n            // Clip maskedSrc to same section of string as src (move to lexer?)\n            maskedSrc = maskedSrc.slice(-1 * src.length + lLength);\n            while ((match = endReg.exec(maskedSrc)) != null) {\n                rDelim = match[1] || match[2] || match[3] || match[4] || match[5] || match[6];\n                if (!rDelim)\n                    continue; // skip single * in __abc*abc__\n                rLength = [...rDelim].length;\n                if (match[3] || match[4]) { // found another Left Delim\n                    delimTotal += rLength;\n                    continue;\n                }\n                else if (match[5] || match[6]) { // either Left or Right Delim\n                    if (lLength % 3 && !((lLength + rLength) % 3)) {\n                        midDelimTotal += rLength;\n                        continue; // CommonMark Emphasis Rules 9-10\n                    }\n                }\n                delimTotal -= rLength;\n                if (delimTotal > 0)\n                    continue; // Haven't found enough closing delimiters\n                // Remove extra characters. *a*** -> *a*\n                rLength = Math.min(rLength, rLength + delimTotal + midDelimTotal);\n                // char length can be >1 for unicode characters;\n                const lastCharLength = [...match[0]][0].length;\n                const raw = src.slice(0, lLength + match.index + lastCharLength + rLength);\n                // Create `em` if smallest delimiter has odd char count. *a***\n                if (Math.min(lLength, rLength) % 2) {\n                    const text = raw.slice(1, -1);\n                    return {\n                        type: 'em',\n                        raw,\n                        text,\n                        tokens: this.lexer.inlineTokens(text)\n                    };\n                }\n                // Create 'strong' if smallest delimiter has even char count. **a***\n                const text = raw.slice(2, -2);\n                return {\n                    type: 'strong',\n                    raw,\n                    text,\n                    tokens: this.lexer.inlineTokens(text)\n                };\n            }\n        }\n    }\n    codespan(src) {\n        const cap = this.rules.inline.code.exec(src);\n        if (cap) {\n            let text = cap[2].replace(/\\n/g, ' ');\n            const hasNonSpaceChars = /[^ ]/.test(text);\n            const hasSpaceCharsOnBothEnds = /^ /.test(text) && / $/.test(text);\n            if (hasNonSpaceChars && hasSpaceCharsOnBothEnds) {\n                text = text.substring(1, text.length - 1);\n            }\n            text = escape$1(text, true);\n            return {\n                type: 'codespan',\n                raw: cap[0],\n                text\n            };\n        }\n    }\n    br(src) {\n        const cap = this.rules.inline.br.exec(src);\n        if (cap) {\n            return {\n                type: 'br',\n                raw: cap[0]\n            };\n        }\n    }\n    del(src) {\n        const cap = this.rules.inline.del.exec(src);\n        if (cap) {\n            return {\n                type: 'del',\n                raw: cap[0],\n                text: cap[2],\n                tokens: this.lexer.inlineTokens(cap[2])\n            };\n        }\n    }\n    autolink(src) {\n        const cap = this.rules.inline.autolink.exec(src);\n        if (cap) {\n            let text, href;\n            if (cap[2] === '@') {\n                text = escape$1(cap[1]);\n                href = 'mailto:' + text;\n            }\n            else {\n                text = escape$1(cap[1]);\n                href = text;\n            }\n            return {\n                type: 'link',\n                raw: cap[0],\n                text,\n                href,\n                tokens: [\n                    {\n                        type: 'text',\n                        raw: text,\n                        text\n                    }\n                ]\n            };\n        }\n    }\n    url(src) {\n        let cap;\n        if (cap = this.rules.inline.url.exec(src)) {\n            let text, href;\n            if (cap[2] === '@') {\n                text = escape$1(cap[0]);\n                href = 'mailto:' + text;\n            }\n            else {\n                // do extended autolink path validation\n                let prevCapZero;\n                do {\n                    prevCapZero = cap[0];\n                    cap[0] = this.rules.inline._backpedal.exec(cap[0])?.[0] ?? '';\n                } while (prevCapZero !== cap[0]);\n                text = escape$1(cap[0]);\n                if (cap[1] === 'www.') {\n                    href = 'http://' + cap[0];\n                }\n                else {\n                    href = cap[0];\n                }\n            }\n            return {\n                type: 'link',\n                raw: cap[0],\n                text,\n                href,\n                tokens: [\n                    {\n                        type: 'text',\n                        raw: text,\n                        text\n                    }\n                ]\n            };\n        }\n    }\n    inlineText(src) {\n        const cap = this.rules.inline.text.exec(src);\n        if (cap) {\n            let text;\n            if (this.lexer.state.inRawBlock) {\n                text = cap[0];\n            }\n            else {\n                text = escape$1(cap[0]);\n            }\n            return {\n                type: 'text',\n                raw: cap[0],\n                text\n            };\n        }\n    }\n}\n\n/**\n * Block-Level Grammar\n */\nconst newline = /^(?: *(?:\\n|$))+/;\nconst blockCode = /^( {4}[^\\n]+(?:\\n(?: *(?:\\n|$))*)?)+/;\nconst fences = /^ {0,3}(`{3,}(?=[^`\\n]*(?:\\n|$))|~{3,})([^\\n]*)(?:\\n|$)(?:|([\\s\\S]*?)(?:\\n|$))(?: {0,3}\\1[~`]* *(?=\\n|$)|$)/;\nconst hr = /^ {0,3}((?:-[\\t ]*){3,}|(?:_[ \\t]*){3,}|(?:\\*[ \\t]*){3,})(?:\\n+|$)/;\nconst heading = /^ {0,3}(#{1,6})(?=\\s|$)(.*)(?:\\n+|$)/;\nconst bullet = /(?:[*+-]|\\d{1,9}[.)])/;\nconst lheading = edit(/^(?!bull )((?:.|\\n(?!\\s*?\\n|bull ))+?)\\n {0,3}(=+|-+) *(?:\\n+|$)/)\n    .replace(/bull/g, bullet) // lists can interrupt\n    .getRegex();\nconst _paragraph = /^([^\\n]+(?:\\n(?!hr|heading|lheading|blockquote|fences|list|html|table| +\\n)[^\\n]+)*)/;\nconst blockText = /^[^\\n]+/;\nconst _blockLabel = /(?!\\s*\\])(?:\\\\.|[^\\[\\]\\\\])+/;\nconst def = edit(/^ {0,3}\\[(label)\\]: *(?:\\n *)?([^<\\s][^\\s]*|<.*?>)(?:(?: +(?:\\n *)?| *\\n *)(title))? *(?:\\n+|$)/)\n    .replace('label', _blockLabel)\n    .replace('title', /(?:\"(?:\\\\\"?|[^\"\\\\])*\"|'[^'\\n]*(?:\\n[^'\\n]+)*\\n?'|\\([^()]*\\))/)\n    .getRegex();\nconst list = edit(/^( {0,3}bull)([ \\t][^\\n]+?)?(?:\\n|$)/)\n    .replace(/bull/g, bullet)\n    .getRegex();\nconst _tag = 'address|article|aside|base|basefont|blockquote|body|caption'\n    + '|center|col|colgroup|dd|details|dialog|dir|div|dl|dt|fieldset|figcaption'\n    + '|figure|footer|form|frame|frameset|h[1-6]|head|header|hr|html|iframe'\n    + '|legend|li|link|main|menu|menuitem|meta|nav|noframes|ol|optgroup|option'\n    + '|p|param|section|source|summary|table|tbody|td|tfoot|th|thead|title|tr'\n    + '|track|ul';\nconst _comment = /<!--(?!-?>)[\\s\\S]*?(?:-->|$)/;\nconst html = edit('^ {0,3}(?:' // optional indentation\n    + '<(script|pre|style|textarea)[\\\\s>][\\\\s\\\\S]*?(?:</\\\\1>[^\\\\n]*\\\\n+|$)' // (1)\n    + '|comment[^\\\\n]*(\\\\n+|$)' // (2)\n    + '|<\\\\?[\\\\s\\\\S]*?(?:\\\\?>\\\\n*|$)' // (3)\n    + '|<![A-Z][\\\\s\\\\S]*?(?:>\\\\n*|$)' // (4)\n    + '|<!\\\\[CDATA\\\\[[\\\\s\\\\S]*?(?:\\\\]\\\\]>\\\\n*|$)' // (5)\n    + '|</?(tag)(?: +|\\\\n|/?>)[\\\\s\\\\S]*?(?:(?:\\\\n *)+\\\\n|$)' // (6)\n    + '|<(?!script|pre|style|textarea)([a-z][\\\\w-]*)(?:attribute)*? */?>(?=[ \\\\t]*(?:\\\\n|$))[\\\\s\\\\S]*?(?:(?:\\\\n *)+\\\\n|$)' // (7) open tag\n    + '|</(?!script|pre|style|textarea)[a-z][\\\\w-]*\\\\s*>(?=[ \\\\t]*(?:\\\\n|$))[\\\\s\\\\S]*?(?:(?:\\\\n *)+\\\\n|$)' // (7) closing tag\n    + ')', 'i')\n    .replace('comment', _comment)\n    .replace('tag', _tag)\n    .replace('attribute', / +[a-zA-Z:_][\\w.:-]*(?: *= *\"[^\"\\n]*\"| *= *'[^'\\n]*'| *= *[^\\s\"'=<>`]+)?/)\n    .getRegex();\nconst paragraph = edit(_paragraph)\n    .replace('hr', hr)\n    .replace('heading', ' {0,3}#{1,6}(?:\\\\s|$)')\n    .replace('|lheading', '') // setex headings don't interrupt commonmark paragraphs\n    .replace('|table', '')\n    .replace('blockquote', ' {0,3}>')\n    .replace('fences', ' {0,3}(?:`{3,}(?=[^`\\\\n]*\\\\n)|~{3,})[^\\\\n]*\\\\n')\n    .replace('list', ' {0,3}(?:[*+-]|1[.)]) ') // only lists starting from 1 can interrupt\n    .replace('html', '</?(?:tag)(?: +|\\\\n|/?>)|<(?:script|pre|style|textarea|!--)')\n    .replace('tag', _tag) // pars can be interrupted by type (6) html blocks\n    .getRegex();\nconst blockquote = edit(/^( {0,3}> ?(paragraph|[^\\n]*)(?:\\n|$))+/)\n    .replace('paragraph', paragraph)\n    .getRegex();\n/**\n * Normal Block Grammar\n */\nconst blockNormal = {\n    blockquote,\n    code: blockCode,\n    def,\n    fences,\n    heading,\n    hr,\n    html,\n    lheading,\n    list,\n    newline,\n    paragraph,\n    table: noopTest,\n    text: blockText\n};\n/**\n * GFM Block Grammar\n */\nconst gfmTable = edit('^ *([^\\\\n ].*)\\\\n' // Header\n    + ' {0,3}((?:\\\\| *)?:?-+:? *(?:\\\\| *:?-+:? *)*(?:\\\\| *)?)' // Align\n    + '(?:\\\\n((?:(?! *\\\\n|hr|heading|blockquote|code|fences|list|html).*(?:\\\\n|$))*)\\\\n*|$)') // Cells\n    .replace('hr', hr)\n    .replace('heading', ' {0,3}#{1,6}(?:\\\\s|$)')\n    .replace('blockquote', ' {0,3}>')\n    .replace('code', ' {4}[^\\\\n]')\n    .replace('fences', ' {0,3}(?:`{3,}(?=[^`\\\\n]*\\\\n)|~{3,})[^\\\\n]*\\\\n')\n    .replace('list', ' {0,3}(?:[*+-]|1[.)]) ') // only lists starting from 1 can interrupt\n    .replace('html', '</?(?:tag)(?: +|\\\\n|/?>)|<(?:script|pre|style|textarea|!--)')\n    .replace('tag', _tag) // tables can be interrupted by type (6) html blocks\n    .getRegex();\nconst blockGfm = {\n    ...blockNormal,\n    table: gfmTable,\n    paragraph: edit(_paragraph)\n        .replace('hr', hr)\n        .replace('heading', ' {0,3}#{1,6}(?:\\\\s|$)')\n        .replace('|lheading', '') // setex headings don't interrupt commonmark paragraphs\n        .replace('table', gfmTable) // interrupt paragraphs with table\n        .replace('blockquote', ' {0,3}>')\n        .replace('fences', ' {0,3}(?:`{3,}(?=[^`\\\\n]*\\\\n)|~{3,})[^\\\\n]*\\\\n')\n        .replace('list', ' {0,3}(?:[*+-]|1[.)]) ') // only lists starting from 1 can interrupt\n        .replace('html', '</?(?:tag)(?: +|\\\\n|/?>)|<(?:script|pre|style|textarea|!--)')\n        .replace('tag', _tag) // pars can be interrupted by type (6) html blocks\n        .getRegex()\n};\n/**\n * Pedantic grammar (original John Gruber's loose markdown specification)\n */\nconst blockPedantic = {\n    ...blockNormal,\n    html: edit('^ *(?:comment *(?:\\\\n|\\\\s*$)'\n        + '|<(tag)[\\\\s\\\\S]+?</\\\\1> *(?:\\\\n{2,}|\\\\s*$)' // closed tag\n        + '|<tag(?:\"[^\"]*\"|\\'[^\\']*\\'|\\\\s[^\\'\"/>\\\\s]*)*?/?> *(?:\\\\n{2,}|\\\\s*$))')\n        .replace('comment', _comment)\n        .replace(/tag/g, '(?!(?:'\n        + 'a|em|strong|small|s|cite|q|dfn|abbr|data|time|code|var|samp|kbd|sub'\n        + '|sup|i|b|u|mark|ruby|rt|rp|bdi|bdo|span|br|wbr|ins|del|img)'\n        + '\\\\b)\\\\w+(?!:|[^\\\\w\\\\s@]*@)\\\\b')\n        .getRegex(),\n    def: /^ *\\[([^\\]]+)\\]: *<?([^\\s>]+)>?(?: +([\"(][^\\n]+[\")]))? *(?:\\n+|$)/,\n    heading: /^(#{1,6})(.*)(?:\\n+|$)/,\n    fences: noopTest, // fences not supported\n    lheading: /^(.+?)\\n {0,3}(=+|-+) *(?:\\n+|$)/,\n    paragraph: edit(_paragraph)\n        .replace('hr', hr)\n        .replace('heading', ' *#{1,6} *[^\\n]')\n        .replace('lheading', lheading)\n        .replace('|table', '')\n        .replace('blockquote', ' {0,3}>')\n        .replace('|fences', '')\n        .replace('|list', '')\n        .replace('|html', '')\n        .replace('|tag', '')\n        .getRegex()\n};\n/**\n * Inline-Level Grammar\n */\nconst escape = /^\\\\([!\"#$%&'()*+,\\-./:;<=>?@\\[\\]\\\\^_`{|}~])/;\nconst inlineCode = /^(`+)([^`]|[^`][\\s\\S]*?[^`])\\1(?!`)/;\nconst br = /^( {2,}|\\\\)\\n(?!\\s*$)/;\nconst inlineText = /^(`+|[^`])(?:(?= {2,}\\n)|[\\s\\S]*?(?:(?=[\\\\<!\\[`*_]|\\b_|$)|[^ ](?= {2,}\\n)))/;\n// list of unicode punctuation marks, plus any missing characters from CommonMark spec\nconst _punctuation = '\\\\p{P}$+<=>`^|~';\nconst punctuation = edit(/^((?![*_])[\\spunctuation])/, 'u')\n    .replace(/punctuation/g, _punctuation).getRegex();\n// sequences em should skip over [title](link), `code`, <html>\nconst blockSkip = /\\[[^[\\]]*?\\]\\([^\\(\\)]*?\\)|`[^`]*?`|<[^<>]*?>/g;\nconst emStrongLDelim = edit(/^(?:\\*+(?:((?!\\*)[punct])|[^\\s*]))|^_+(?:((?!_)[punct])|([^\\s_]))/, 'u')\n    .replace(/punct/g, _punctuation)\n    .getRegex();\nconst emStrongRDelimAst = edit('^[^_*]*?__[^_*]*?\\\\*[^_*]*?(?=__)' // Skip orphan inside strong\n    + '|[^*]+(?=[^*])' // Consume to delim\n    + '|(?!\\\\*)[punct](\\\\*+)(?=[\\\\s]|$)' // (1) #*** can only be a Right Delimiter\n    + '|[^punct\\\\s](\\\\*+)(?!\\\\*)(?=[punct\\\\s]|$)' // (2) a***#, a*** can only be a Right Delimiter\n    + '|(?!\\\\*)[punct\\\\s](\\\\*+)(?=[^punct\\\\s])' // (3) #***a, ***a can only be Left Delimiter\n    + '|[\\\\s](\\\\*+)(?!\\\\*)(?=[punct])' // (4) ***# can only be Left Delimiter\n    + '|(?!\\\\*)[punct](\\\\*+)(?!\\\\*)(?=[punct])' // (5) #***# can be either Left or Right Delimiter\n    + '|[^punct\\\\s](\\\\*+)(?=[^punct\\\\s])', 'gu') // (6) a***a can be either Left or Right Delimiter\n    .replace(/punct/g, _punctuation)\n    .getRegex();\n// (6) Not allowed for _\nconst emStrongRDelimUnd = edit('^[^_*]*?\\\\*\\\\*[^_*]*?_[^_*]*?(?=\\\\*\\\\*)' // Skip orphan inside strong\n    + '|[^_]+(?=[^_])' // Consume to delim\n    + '|(?!_)[punct](_+)(?=[\\\\s]|$)' // (1) #___ can only be a Right Delimiter\n    + '|[^punct\\\\s](_+)(?!_)(?=[punct\\\\s]|$)' // (2) a___#, a___ can only be a Right Delimiter\n    + '|(?!_)[punct\\\\s](_+)(?=[^punct\\\\s])' // (3) #___a, ___a can only be Left Delimiter\n    + '|[\\\\s](_+)(?!_)(?=[punct])' // (4) ___# can only be Left Delimiter\n    + '|(?!_)[punct](_+)(?!_)(?=[punct])', 'gu') // (5) #___# can be either Left or Right Delimiter\n    .replace(/punct/g, _punctuation)\n    .getRegex();\nconst anyPunctuation = edit(/\\\\([punct])/, 'gu')\n    .replace(/punct/g, _punctuation)\n    .getRegex();\nconst autolink = edit(/^<(scheme:[^\\s\\x00-\\x1f<>]*|email)>/)\n    .replace('scheme', /[a-zA-Z][a-zA-Z0-9+.-]{1,31}/)\n    .replace('email', /[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+(@)[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)+(?![-_])/)\n    .getRegex();\nconst _inlineComment = edit(_comment).replace('(?:-->|$)', '-->').getRegex();\nconst tag = edit('^comment'\n    + '|^</[a-zA-Z][\\\\w:-]*\\\\s*>' // self-closing tag\n    + '|^<[a-zA-Z][\\\\w-]*(?:attribute)*?\\\\s*/?>' // open tag\n    + '|^<\\\\?[\\\\s\\\\S]*?\\\\?>' // processing instruction, e.g. <?php ?>\n    + '|^<![a-zA-Z]+\\\\s[\\\\s\\\\S]*?>' // declaration, e.g. <!DOCTYPE html>\n    + '|^<!\\\\[CDATA\\\\[[\\\\s\\\\S]*?\\\\]\\\\]>') // CDATA section\n    .replace('comment', _inlineComment)\n    .replace('attribute', /\\s+[a-zA-Z:_][\\w.:-]*(?:\\s*=\\s*\"[^\"]*\"|\\s*=\\s*'[^']*'|\\s*=\\s*[^\\s\"'=<>`]+)?/)\n    .getRegex();\nconst _inlineLabel = /(?:\\[(?:\\\\.|[^\\[\\]\\\\])*\\]|\\\\.|`[^`]*`|[^\\[\\]\\\\`])*?/;\nconst link = edit(/^!?\\[(label)\\]\\(\\s*(href)(?:\\s+(title))?\\s*\\)/)\n    .replace('label', _inlineLabel)\n    .replace('href', /<(?:\\\\.|[^\\n<>\\\\])+>|[^\\s\\x00-\\x1f]*/)\n    .replace('title', /\"(?:\\\\\"?|[^\"\\\\])*\"|'(?:\\\\'?|[^'\\\\])*'|\\((?:\\\\\\)?|[^)\\\\])*\\)/)\n    .getRegex();\nconst reflink = edit(/^!?\\[(label)\\]\\[(ref)\\]/)\n    .replace('label', _inlineLabel)\n    .replace('ref', _blockLabel)\n    .getRegex();\nconst nolink = edit(/^!?\\[(ref)\\](?:\\[\\])?/)\n    .replace('ref', _blockLabel)\n    .getRegex();\nconst reflinkSearch = edit('reflink|nolink(?!\\\\()', 'g')\n    .replace('reflink', reflink)\n    .replace('nolink', nolink)\n    .getRegex();\n/**\n * Normal Inline Grammar\n */\nconst inlineNormal = {\n    _backpedal: noopTest, // only used for GFM url\n    anyPunctuation,\n    autolink,\n    blockSkip,\n    br,\n    code: inlineCode,\n    del: noopTest,\n    emStrongLDelim,\n    emStrongRDelimAst,\n    emStrongRDelimUnd,\n    escape,\n    link,\n    nolink,\n    punctuation,\n    reflink,\n    reflinkSearch,\n    tag,\n    text: inlineText,\n    url: noopTest\n};\n/**\n * Pedantic Inline Grammar\n */\nconst inlinePedantic = {\n    ...inlineNormal,\n    link: edit(/^!?\\[(label)\\]\\((.*?)\\)/)\n        .replace('label', _inlineLabel)\n        .getRegex(),\n    reflink: edit(/^!?\\[(label)\\]\\s*\\[([^\\]]*)\\]/)\n        .replace('label', _inlineLabel)\n        .getRegex()\n};\n/**\n * GFM Inline Grammar\n */\nconst inlineGfm = {\n    ...inlineNormal,\n    escape: edit(escape).replace('])', '~|])').getRegex(),\n    url: edit(/^((?:ftp|https?):\\/\\/|www\\.)(?:[a-zA-Z0-9\\-]+\\.?)+[^\\s<]*|^email/, 'i')\n        .replace('email', /[A-Za-z0-9._+-]+(@)[a-zA-Z0-9-_]+(?:\\.[a-zA-Z0-9-_]*[a-zA-Z0-9])+(?![-_])/)\n        .getRegex(),\n    _backpedal: /(?:[^?!.,:;*_'\"~()&]+|\\([^)]*\\)|&(?![a-zA-Z0-9]+;$)|[?!.,:;*_'\"~)]+(?!$))+/,\n    del: /^(~~?)(?=[^\\s~])([\\s\\S]*?[^\\s~])\\1(?=[^~]|$)/,\n    text: /^([`~]+|[^`~])(?:(?= {2,}\\n)|(?=[a-zA-Z0-9.!#$%&'*+\\/=?_`{\\|}~-]+@)|[\\s\\S]*?(?:(?=[\\\\<!\\[`*~_]|\\b_|https?:\\/\\/|ftp:\\/\\/|www\\.|$)|[^ ](?= {2,}\\n)|[^a-zA-Z0-9.!#$%&'*+\\/=?_`{\\|}~-](?=[a-zA-Z0-9.!#$%&'*+\\/=?_`{\\|}~-]+@)))/\n};\n/**\n * GFM + Line Breaks Inline Grammar\n */\nconst inlineBreaks = {\n    ...inlineGfm,\n    br: edit(br).replace('{2,}', '*').getRegex(),\n    text: edit(inlineGfm.text)\n        .replace('\\\\b_', '\\\\b_| {2,}\\\\n')\n        .replace(/\\{2,\\}/g, '*')\n        .getRegex()\n};\n/**\n * exports\n */\nconst block = {\n    normal: blockNormal,\n    gfm: blockGfm,\n    pedantic: blockPedantic\n};\nconst inline = {\n    normal: inlineNormal,\n    gfm: inlineGfm,\n    breaks: inlineBreaks,\n    pedantic: inlinePedantic\n};\n\n/**\n * Block Lexer\n */\nclass _Lexer {\n    tokens;\n    options;\n    state;\n    tokenizer;\n    inlineQueue;\n    constructor(options) {\n        // TokenList cannot be created in one go\n        this.tokens = [];\n        this.tokens.links = Object.create(null);\n        this.options = options || _defaults;\n        this.options.tokenizer = this.options.tokenizer || new _Tokenizer();\n        this.tokenizer = this.options.tokenizer;\n        this.tokenizer.options = this.options;\n        this.tokenizer.lexer = this;\n        this.inlineQueue = [];\n        this.state = {\n            inLink: false,\n            inRawBlock: false,\n            top: true\n        };\n        const rules = {\n            block: block.normal,\n            inline: inline.normal\n        };\n        if (this.options.pedantic) {\n            rules.block = block.pedantic;\n            rules.inline = inline.pedantic;\n        }\n        else if (this.options.gfm) {\n            rules.block = block.gfm;\n            if (this.options.breaks) {\n                rules.inline = inline.breaks;\n            }\n            else {\n                rules.inline = inline.gfm;\n            }\n        }\n        this.tokenizer.rules = rules;\n    }\n    /**\n     * Expose Rules\n     */\n    static get rules() {\n        return {\n            block,\n            inline\n        };\n    }\n    /**\n     * Static Lex Method\n     */\n    static lex(src, options) {\n        const lexer = new _Lexer(options);\n        return lexer.lex(src);\n    }\n    /**\n     * Static Lex Inline Method\n     */\n    static lexInline(src, options) {\n        const lexer = new _Lexer(options);\n        return lexer.inlineTokens(src);\n    }\n    /**\n     * Preprocessing\n     */\n    lex(src) {\n        src = src\n            .replace(/\\r\\n|\\r/g, '\\n');\n        this.blockTokens(src, this.tokens);\n        for (let i = 0; i < this.inlineQueue.length; i++) {\n            const next = this.inlineQueue[i];\n            this.inlineTokens(next.src, next.tokens);\n        }\n        this.inlineQueue = [];\n        return this.tokens;\n    }\n    blockTokens(src, tokens = []) {\n        if (this.options.pedantic) {\n            src = src.replace(/\\t/g, '    ').replace(/^ +$/gm, '');\n        }\n        else {\n            src = src.replace(/^( *)(\\t+)/gm, (_, leading, tabs) => {\n                return leading + '    '.repeat(tabs.length);\n            });\n        }\n        let token;\n        let lastToken;\n        let cutSrc;\n        let lastParagraphClipped;\n        while (src) {\n            if (this.options.extensions\n                && this.options.extensions.block\n                && this.options.extensions.block.some((extTokenizer) => {\n                    if (token = extTokenizer.call({ lexer: this }, src, tokens)) {\n                        src = src.substring(token.raw.length);\n                        tokens.push(token);\n                        return true;\n                    }\n                    return false;\n                })) {\n                continue;\n            }\n            // newline\n            if (token = this.tokenizer.space(src)) {\n                src = src.substring(token.raw.length);\n                if (token.raw.length === 1 && tokens.length > 0) {\n                    // if there's a single \\n as a spacer, it's terminating the last line,\n                    // so move it there so that we don't get unnecessary paragraph tags\n                    tokens[tokens.length - 1].raw += '\\n';\n                }\n                else {\n                    tokens.push(token);\n                }\n                continue;\n            }\n            // code\n            if (token = this.tokenizer.code(src)) {\n                src = src.substring(token.raw.length);\n                lastToken = tokens[tokens.length - 1];\n                // An indented code block cannot interrupt a paragraph.\n                if (lastToken && (lastToken.type === 'paragraph' || lastToken.type === 'text')) {\n                    lastToken.raw += '\\n' + token.raw;\n                    lastToken.text += '\\n' + token.text;\n                    this.inlineQueue[this.inlineQueue.length - 1].src = lastToken.text;\n                }\n                else {\n                    tokens.push(token);\n                }\n                continue;\n            }\n            // fences\n            if (token = this.tokenizer.fences(src)) {\n                src = src.substring(token.raw.length);\n                tokens.push(token);\n                continue;\n            }\n            // heading\n            if (token = this.tokenizer.heading(src)) {\n                src = src.substring(token.raw.length);\n                tokens.push(token);\n                continue;\n            }\n            // hr\n            if (token = this.tokenizer.hr(src)) {\n                src = src.substring(token.raw.length);\n                tokens.push(token);\n                continue;\n            }\n            // blockquote\n            if (token = this.tokenizer.blockquote(src)) {\n                src = src.substring(token.raw.length);\n                tokens.push(token);\n                continue;\n            }\n            // list\n            if (token = this.tokenizer.list(src)) {\n                src = src.substring(token.raw.length);\n                tokens.push(token);\n                continue;\n            }\n            // html\n            if (token = this.tokenizer.html(src)) {\n                src = src.substring(token.raw.length);\n                tokens.push(token);\n                continue;\n            }\n            // def\n            if (token = this.tokenizer.def(src)) {\n                src = src.substring(token.raw.length);\n                lastToken = tokens[tokens.length - 1];\n                if (lastToken && (lastToken.type === 'paragraph' || lastToken.type === 'text')) {\n                    lastToken.raw += '\\n' + token.raw;\n                    lastToken.text += '\\n' + token.raw;\n                    this.inlineQueue[this.inlineQueue.length - 1].src = lastToken.text;\n                }\n                else if (!this.tokens.links[token.tag]) {\n                    this.tokens.links[token.tag] = {\n                        href: token.href,\n                        title: token.title\n                    };\n                }\n                continue;\n            }\n            // table (gfm)\n            if (token = this.tokenizer.table(src)) {\n                src = src.substring(token.raw.length);\n                tokens.push(token);\n                continue;\n            }\n            // lheading\n            if (token = this.tokenizer.lheading(src)) {\n                src = src.substring(token.raw.length);\n                tokens.push(token);\n                continue;\n            }\n            // top-level paragraph\n            // prevent paragraph consuming extensions by clipping 'src' to extension start\n            cutSrc = src;\n            if (this.options.extensions && this.options.extensions.startBlock) {\n                let startIndex = Infinity;\n                const tempSrc = src.slice(1);\n                let tempStart;\n                this.options.extensions.startBlock.forEach((getStartIndex) => {\n                    tempStart = getStartIndex.call({ lexer: this }, tempSrc);\n                    if (typeof tempStart === 'number' && tempStart >= 0) {\n                        startIndex = Math.min(startIndex, tempStart);\n                    }\n                });\n                if (startIndex < Infinity && startIndex >= 0) {\n                    cutSrc = src.substring(0, startIndex + 1);\n                }\n            }\n            if (this.state.top && (token = this.tokenizer.paragraph(cutSrc))) {\n                lastToken = tokens[tokens.length - 1];\n                if (lastParagraphClipped && lastToken.type === 'paragraph') {\n                    lastToken.raw += '\\n' + token.raw;\n                    lastToken.text += '\\n' + token.text;\n                    this.inlineQueue.pop();\n                    this.inlineQueue[this.inlineQueue.length - 1].src = lastToken.text;\n                }\n                else {\n                    tokens.push(token);\n                }\n                lastParagraphClipped = (cutSrc.length !== src.length);\n                src = src.substring(token.raw.length);\n                continue;\n            }\n            // text\n            if (token = this.tokenizer.text(src)) {\n                src = src.substring(token.raw.length);\n                lastToken = tokens[tokens.length - 1];\n                if (lastToken && lastToken.type === 'text') {\n                    lastToken.raw += '\\n' + token.raw;\n                    lastToken.text += '\\n' + token.text;\n                    this.inlineQueue.pop();\n                    this.inlineQueue[this.inlineQueue.length - 1].src = lastToken.text;\n                }\n                else {\n                    tokens.push(token);\n                }\n                continue;\n            }\n            if (src) {\n                const errMsg = 'Infinite loop on byte: ' + src.charCodeAt(0);\n                if (this.options.silent) {\n                    console.error(errMsg);\n                    break;\n                }\n                else {\n                    throw new Error(errMsg);\n                }\n            }\n        }\n        this.state.top = true;\n        return tokens;\n    }\n    inline(src, tokens = []) {\n        this.inlineQueue.push({ src, tokens });\n        return tokens;\n    }\n    /**\n     * Lexing/Compiling\n     */\n    inlineTokens(src, tokens = []) {\n        let token, lastToken, cutSrc;\n        // String with links masked to avoid interference with em and strong\n        let maskedSrc = src;\n        let match;\n        let keepPrevChar, prevChar;\n        // Mask out reflinks\n        if (this.tokens.links) {\n            const links = Object.keys(this.tokens.links);\n            if (links.length > 0) {\n                while ((match = this.tokenizer.rules.inline.reflinkSearch.exec(maskedSrc)) != null) {\n                    if (links.includes(match[0].slice(match[0].lastIndexOf('[') + 1, -1))) {\n                        maskedSrc = maskedSrc.slice(0, match.index) + '[' + 'a'.repeat(match[0].length - 2) + ']' + maskedSrc.slice(this.tokenizer.rules.inline.reflinkSearch.lastIndex);\n                    }\n                }\n            }\n        }\n        // Mask out other blocks\n        while ((match = this.tokenizer.rules.inline.blockSkip.exec(maskedSrc)) != null) {\n            maskedSrc = maskedSrc.slice(0, match.index) + '[' + 'a'.repeat(match[0].length - 2) + ']' + maskedSrc.slice(this.tokenizer.rules.inline.blockSkip.lastIndex);\n        }\n        // Mask out escaped characters\n        while ((match = this.tokenizer.rules.inline.anyPunctuation.exec(maskedSrc)) != null) {\n            maskedSrc = maskedSrc.slice(0, match.index) + '++' + maskedSrc.slice(this.tokenizer.rules.inline.anyPunctuation.lastIndex);\n        }\n        while (src) {\n            if (!keepPrevChar) {\n                prevChar = '';\n            }\n            keepPrevChar = false;\n            // extensions\n            if (this.options.extensions\n                && this.options.extensions.inline\n                && this.options.extensions.inline.some((extTokenizer) => {\n                    if (token = extTokenizer.call({ lexer: this }, src, tokens)) {\n                        src = src.substring(token.raw.length);\n                        tokens.push(token);\n                        return true;\n                    }\n                    return false;\n                })) {\n                continue;\n            }\n            // escape\n            if (token = this.tokenizer.escape(src)) {\n                src = src.substring(token.raw.length);\n                tokens.push(token);\n                continue;\n            }\n            // tag\n            if (token = this.tokenizer.tag(src)) {\n                src = src.substring(token.raw.length);\n                lastToken = tokens[tokens.length - 1];\n                if (lastToken && token.type === 'text' && lastToken.type === 'text') {\n                    lastToken.raw += token.raw;\n                    lastToken.text += token.text;\n                }\n                else {\n                    tokens.push(token);\n                }\n                continue;\n            }\n            // link\n            if (token = this.tokenizer.link(src)) {\n                src = src.substring(token.raw.length);\n                tokens.push(token);\n                continue;\n            }\n            // reflink, nolink\n            if (token = this.tokenizer.reflink(src, this.tokens.links)) {\n                src = src.substring(token.raw.length);\n                lastToken = tokens[tokens.length - 1];\n                if (lastToken && token.type === 'text' && lastToken.type === 'text') {\n                    lastToken.raw += token.raw;\n                    lastToken.text += token.text;\n                }\n                else {\n                    tokens.push(token);\n                }\n                continue;\n            }\n            // em & strong\n            if (token = this.tokenizer.emStrong(src, maskedSrc, prevChar)) {\n                src = src.substring(token.raw.length);\n                tokens.push(token);\n                continue;\n            }\n            // code\n            if (token = this.tokenizer.codespan(src)) {\n                src = src.substring(token.raw.length);\n                tokens.push(token);\n                continue;\n            }\n            // br\n            if (token = this.tokenizer.br(src)) {\n                src = src.substring(token.raw.length);\n                tokens.push(token);\n                continue;\n            }\n            // del (gfm)\n            if (token = this.tokenizer.del(src)) {\n                src = src.substring(token.raw.length);\n                tokens.push(token);\n                continue;\n            }\n            // autolink\n            if (token = this.tokenizer.autolink(src)) {\n                src = src.substring(token.raw.length);\n                tokens.push(token);\n                continue;\n            }\n            // url (gfm)\n            if (!this.state.inLink && (token = this.tokenizer.url(src))) {\n                src = src.substring(token.raw.length);\n                tokens.push(token);\n                continue;\n            }\n            // text\n            // prevent inlineText consuming extensions by clipping 'src' to extension start\n            cutSrc = src;\n            if (this.options.extensions && this.options.extensions.startInline) {\n                let startIndex = Infinity;\n                const tempSrc = src.slice(1);\n                let tempStart;\n                this.options.extensions.startInline.forEach((getStartIndex) => {\n                    tempStart = getStartIndex.call({ lexer: this }, tempSrc);\n                    if (typeof tempStart === 'number' && tempStart >= 0) {\n                        startIndex = Math.min(startIndex, tempStart);\n                    }\n                });\n                if (startIndex < Infinity && startIndex >= 0) {\n                    cutSrc = src.substring(0, startIndex + 1);\n                }\n            }\n            if (token = this.tokenizer.inlineText(cutSrc)) {\n                src = src.substring(token.raw.length);\n                if (token.raw.slice(-1) !== '_') { // Track prevChar before string of ____ started\n                    prevChar = token.raw.slice(-1);\n                }\n                keepPrevChar = true;\n                lastToken = tokens[tokens.length - 1];\n                if (lastToken && lastToken.type === 'text') {\n                    lastToken.raw += token.raw;\n                    lastToken.text += token.text;\n                }\n                else {\n                    tokens.push(token);\n                }\n                continue;\n            }\n            if (src) {\n                const errMsg = 'Infinite loop on byte: ' + src.charCodeAt(0);\n                if (this.options.silent) {\n                    console.error(errMsg);\n                    break;\n                }\n                else {\n                    throw new Error(errMsg);\n                }\n            }\n        }\n        return tokens;\n    }\n}\n\n/**\n * Renderer\n */\nclass _Renderer {\n    options;\n    constructor(options) {\n        this.options = options || _defaults;\n    }\n    code(code, infostring, escaped) {\n        const lang = (infostring || '').match(/^\\S*/)?.[0];\n        code = code.replace(/\\n$/, '') + '\\n';\n        if (!lang) {\n            return '<pre><code>'\n                + (escaped ? code : escape$1(code, true))\n                + '</code></pre>\\n';\n        }\n        return '<pre><code class=\"language-'\n            + escape$1(lang)\n            + '\">'\n            + (escaped ? code : escape$1(code, true))\n            + '</code></pre>\\n';\n    }\n    blockquote(quote) {\n        return `<blockquote>\\n${quote}</blockquote>\\n`;\n    }\n    html(html, block) {\n        return html;\n    }\n    heading(text, level, raw) {\n        // ignore IDs\n        return `<h${level}>${text}</h${level}>\\n`;\n    }\n    hr() {\n        return '<hr>\\n';\n    }\n    list(body, ordered, start) {\n        const type = ordered ? 'ol' : 'ul';\n        const startatt = (ordered && start !== 1) ? (' start=\"' + start + '\"') : '';\n        return '<' + type + startatt + '>\\n' + body + '</' + type + '>\\n';\n    }\n    listitem(text, task, checked) {\n        return `<li>${text}</li>\\n`;\n    }\n    checkbox(checked) {\n        return '<input '\n            + (checked ? 'checked=\"\" ' : '')\n            + 'disabled=\"\" type=\"checkbox\">';\n    }\n    paragraph(text) {\n        return `<p>${text}</p>\\n`;\n    }\n    table(header, body) {\n        if (body)\n            body = `<tbody>${body}</tbody>`;\n        return '<table>\\n'\n            + '<thead>\\n'\n            + header\n            + '</thead>\\n'\n            + body\n            + '</table>\\n';\n    }\n    tablerow(content) {\n        return `<tr>\\n${content}</tr>\\n`;\n    }\n    tablecell(content, flags) {\n        const type = flags.header ? 'th' : 'td';\n        const tag = flags.align\n            ? `<${type} align=\"${flags.align}\">`\n            : `<${type}>`;\n        return tag + content + `</${type}>\\n`;\n    }\n    /**\n     * span level renderer\n     */\n    strong(text) {\n        return `<strong>${text}</strong>`;\n    }\n    em(text) {\n        return `<em>${text}</em>`;\n    }\n    codespan(text) {\n        return `<code>${text}</code>`;\n    }\n    br() {\n        return '<br>';\n    }\n    del(text) {\n        return `<del>${text}</del>`;\n    }\n    link(href, title, text) {\n        const cleanHref = cleanUrl(href);\n        if (cleanHref === null) {\n            return text;\n        }\n        href = cleanHref;\n        let out = '<a href=\"' + href + '\"';\n        if (title) {\n            out += ' title=\"' + title + '\"';\n        }\n        out += '>' + text + '</a>';\n        return out;\n    }\n    image(href, title, text) {\n        const cleanHref = cleanUrl(href);\n        if (cleanHref === null) {\n            return text;\n        }\n        href = cleanHref;\n        let out = `<img src=\"${href}\" alt=\"${text}\"`;\n        if (title) {\n            out += ` title=\"${title}\"`;\n        }\n        out += '>';\n        return out;\n    }\n    text(text) {\n        return text;\n    }\n}\n\n/**\n * TextRenderer\n * returns only the textual part of the token\n */\nclass _TextRenderer {\n    // no need for block level renderers\n    strong(text) {\n        return text;\n    }\n    em(text) {\n        return text;\n    }\n    codespan(text) {\n        return text;\n    }\n    del(text) {\n        return text;\n    }\n    html(text) {\n        return text;\n    }\n    text(text) {\n        return text;\n    }\n    link(href, title, text) {\n        return '' + text;\n    }\n    image(href, title, text) {\n        return '' + text;\n    }\n    br() {\n        return '';\n    }\n}\n\n/**\n * Parsing & Compiling\n */\nclass _Parser {\n    options;\n    renderer;\n    textRenderer;\n    constructor(options) {\n        this.options = options || _defaults;\n        this.options.renderer = this.options.renderer || new _Renderer();\n        this.renderer = this.options.renderer;\n        this.renderer.options = this.options;\n        this.textRenderer = new _TextRenderer();\n    }\n    /**\n     * Static Parse Method\n     */\n    static parse(tokens, options) {\n        const parser = new _Parser(options);\n        return parser.parse(tokens);\n    }\n    /**\n     * Static Parse Inline Method\n     */\n    static parseInline(tokens, options) {\n        const parser = new _Parser(options);\n        return parser.parseInline(tokens);\n    }\n    /**\n     * Parse Loop\n     */\n    parse(tokens, top = true) {\n        let out = '';\n        for (let i = 0; i < tokens.length; i++) {\n            const token = tokens[i];\n            // Run any renderer extensions\n            if (this.options.extensions && this.options.extensions.renderers && this.options.extensions.renderers[token.type]) {\n                const genericToken = token;\n                const ret = this.options.extensions.renderers[genericToken.type].call({ parser: this }, genericToken);\n                if (ret !== false || !['space', 'hr', 'heading', 'code', 'table', 'blockquote', 'list', 'html', 'paragraph', 'text'].includes(genericToken.type)) {\n                    out += ret || '';\n                    continue;\n                }\n            }\n            switch (token.type) {\n                case 'space': {\n                    continue;\n                }\n                case 'hr': {\n                    out += this.renderer.hr();\n                    continue;\n                }\n                case 'heading': {\n                    const headingToken = token;\n                    out += this.renderer.heading(this.parseInline(headingToken.tokens), headingToken.depth, unescape(this.parseInline(headingToken.tokens, this.textRenderer)));\n                    continue;\n                }\n                case 'code': {\n                    const codeToken = token;\n                    out += this.renderer.code(codeToken.text, codeToken.lang, !!codeToken.escaped);\n                    continue;\n                }\n                case 'table': {\n                    const tableToken = token;\n                    let header = '';\n                    // header\n                    let cell = '';\n                    for (let j = 0; j < tableToken.header.length; j++) {\n                        cell += this.renderer.tablecell(this.parseInline(tableToken.header[j].tokens), { header: true, align: tableToken.align[j] });\n                    }\n                    header += this.renderer.tablerow(cell);\n                    let body = '';\n                    for (let j = 0; j < tableToken.rows.length; j++) {\n                        const row = tableToken.rows[j];\n                        cell = '';\n                        for (let k = 0; k < row.length; k++) {\n                            cell += this.renderer.tablecell(this.parseInline(row[k].tokens), { header: false, align: tableToken.align[k] });\n                        }\n                        body += this.renderer.tablerow(cell);\n                    }\n                    out += this.renderer.table(header, body);\n                    continue;\n                }\n                case 'blockquote': {\n                    const blockquoteToken = token;\n                    const body = this.parse(blockquoteToken.tokens);\n                    out += this.renderer.blockquote(body);\n                    continue;\n                }\n                case 'list': {\n                    const listToken = token;\n                    const ordered = listToken.ordered;\n                    const start = listToken.start;\n                    const loose = listToken.loose;\n                    let body = '';\n                    for (let j = 0; j < listToken.items.length; j++) {\n                        const item = listToken.items[j];\n                        const checked = item.checked;\n                        const task = item.task;\n                        let itemBody = '';\n                        if (item.task) {\n                            const checkbox = this.renderer.checkbox(!!checked);\n                            if (loose) {\n                                if (item.tokens.length > 0 && item.tokens[0].type === 'paragraph') {\n                                    item.tokens[0].text = checkbox + ' ' + item.tokens[0].text;\n                                    if (item.tokens[0].tokens && item.tokens[0].tokens.length > 0 && item.tokens[0].tokens[0].type === 'text') {\n                                        item.tokens[0].tokens[0].text = checkbox + ' ' + item.tokens[0].tokens[0].text;\n                                    }\n                                }\n                                else {\n                                    item.tokens.unshift({\n                                        type: 'text',\n                                        text: checkbox + ' '\n                                    });\n                                }\n                            }\n                            else {\n                                itemBody += checkbox + ' ';\n                            }\n                        }\n                        itemBody += this.parse(item.tokens, loose);\n                        body += this.renderer.listitem(itemBody, task, !!checked);\n                    }\n                    out += this.renderer.list(body, ordered, start);\n                    continue;\n                }\n                case 'html': {\n                    const htmlToken = token;\n                    out += this.renderer.html(htmlToken.text, htmlToken.block);\n                    continue;\n                }\n                case 'paragraph': {\n                    const paragraphToken = token;\n                    out += this.renderer.paragraph(this.parseInline(paragraphToken.tokens));\n                    continue;\n                }\n                case 'text': {\n                    let textToken = token;\n                    let body = textToken.tokens ? this.parseInline(textToken.tokens) : textToken.text;\n                    while (i + 1 < tokens.length && tokens[i + 1].type === 'text') {\n                        textToken = tokens[++i];\n                        body += '\\n' + (textToken.tokens ? this.parseInline(textToken.tokens) : textToken.text);\n                    }\n                    out += top ? this.renderer.paragraph(body) : body;\n                    continue;\n                }\n                default: {\n                    const errMsg = 'Token with \"' + token.type + '\" type was not found.';\n                    if (this.options.silent) {\n                        console.error(errMsg);\n                        return '';\n                    }\n                    else {\n                        throw new Error(errMsg);\n                    }\n                }\n            }\n        }\n        return out;\n    }\n    /**\n     * Parse Inline Tokens\n     */\n    parseInline(tokens, renderer) {\n        renderer = renderer || this.renderer;\n        let out = '';\n        for (let i = 0; i < tokens.length; i++) {\n            const token = tokens[i];\n            // Run any renderer extensions\n            if (this.options.extensions && this.options.extensions.renderers && this.options.extensions.renderers[token.type]) {\n                const ret = this.options.extensions.renderers[token.type].call({ parser: this }, token);\n                if (ret !== false || !['escape', 'html', 'link', 'image', 'strong', 'em', 'codespan', 'br', 'del', 'text'].includes(token.type)) {\n                    out += ret || '';\n                    continue;\n                }\n            }\n            switch (token.type) {\n                case 'escape': {\n                    const escapeToken = token;\n                    out += renderer.text(escapeToken.text);\n                    break;\n                }\n                case 'html': {\n                    const tagToken = token;\n                    out += renderer.html(tagToken.text);\n                    break;\n                }\n                case 'link': {\n                    const linkToken = token;\n                    out += renderer.link(linkToken.href, linkToken.title, this.parseInline(linkToken.tokens, renderer));\n                    break;\n                }\n                case 'image': {\n                    const imageToken = token;\n                    out += renderer.image(imageToken.href, imageToken.title, imageToken.text);\n                    break;\n                }\n                case 'strong': {\n                    const strongToken = token;\n                    out += renderer.strong(this.parseInline(strongToken.tokens, renderer));\n                    break;\n                }\n                case 'em': {\n                    const emToken = token;\n                    out += renderer.em(this.parseInline(emToken.tokens, renderer));\n                    break;\n                }\n                case 'codespan': {\n                    const codespanToken = token;\n                    out += renderer.codespan(codespanToken.text);\n                    break;\n                }\n                case 'br': {\n                    out += renderer.br();\n                    break;\n                }\n                case 'del': {\n                    const delToken = token;\n                    out += renderer.del(this.parseInline(delToken.tokens, renderer));\n                    break;\n                }\n                case 'text': {\n                    const textToken = token;\n                    out += renderer.text(textToken.text);\n                    break;\n                }\n                default: {\n                    const errMsg = 'Token with \"' + token.type + '\" type was not found.';\n                    if (this.options.silent) {\n                        console.error(errMsg);\n                        return '';\n                    }\n                    else {\n                        throw new Error(errMsg);\n                    }\n                }\n            }\n        }\n        return out;\n    }\n}\n\nclass _Hooks {\n    options;\n    constructor(options) {\n        this.options = options || _defaults;\n    }\n    static passThroughHooks = new Set([\n        'preprocess',\n        'postprocess',\n        'processAllTokens'\n    ]);\n    /**\n     * Process markdown before marked\n     */\n    preprocess(markdown) {\n        return markdown;\n    }\n    /**\n     * Process HTML after marked is finished\n     */\n    postprocess(html) {\n        return html;\n    }\n    /**\n     * Process all tokens before walk tokens\n     */\n    processAllTokens(tokens) {\n        return tokens;\n    }\n}\n\nclass Marked {\n    defaults = _getDefaults();\n    options = this.setOptions;\n    parse = this.#parseMarkdown(_Lexer.lex, _Parser.parse);\n    parseInline = this.#parseMarkdown(_Lexer.lexInline, _Parser.parseInline);\n    Parser = _Parser;\n    Renderer = _Renderer;\n    TextRenderer = _TextRenderer;\n    Lexer = _Lexer;\n    Tokenizer = _Tokenizer;\n    Hooks = _Hooks;\n    constructor(...args) {\n        this.use(...args);\n    }\n    /**\n     * Run callback for every token\n     */\n    walkTokens(tokens, callback) {\n        let values = [];\n        for (const token of tokens) {\n            values = values.concat(callback.call(this, token));\n            switch (token.type) {\n                case 'table': {\n                    const tableToken = token;\n                    for (const cell of tableToken.header) {\n                        values = values.concat(this.walkTokens(cell.tokens, callback));\n                    }\n                    for (const row of tableToken.rows) {\n                        for (const cell of row) {\n                            values = values.concat(this.walkTokens(cell.tokens, callback));\n                        }\n                    }\n                    break;\n                }\n                case 'list': {\n                    const listToken = token;\n                    values = values.concat(this.walkTokens(listToken.items, callback));\n                    break;\n                }\n                default: {\n                    const genericToken = token;\n                    if (this.defaults.extensions?.childTokens?.[genericToken.type]) {\n                        this.defaults.extensions.childTokens[genericToken.type].forEach((childTokens) => {\n                            const tokens = genericToken[childTokens].flat(Infinity);\n                            values = values.concat(this.walkTokens(tokens, callback));\n                        });\n                    }\n                    else if (genericToken.tokens) {\n                        values = values.concat(this.walkTokens(genericToken.tokens, callback));\n                    }\n                }\n            }\n        }\n        return values;\n    }\n    use(...args) {\n        const extensions = this.defaults.extensions || { renderers: {}, childTokens: {} };\n        args.forEach((pack) => {\n            // copy options to new object\n            const opts = { ...pack };\n            // set async to true if it was set to true before\n            opts.async = this.defaults.async || opts.async || false;\n            // ==-- Parse \"addon\" extensions --== //\n            if (pack.extensions) {\n                pack.extensions.forEach((ext) => {\n                    if (!ext.name) {\n                        throw new Error('extension name required');\n                    }\n                    if ('renderer' in ext) { // Renderer extensions\n                        const prevRenderer = extensions.renderers[ext.name];\n                        if (prevRenderer) {\n                            // Replace extension with func to run new extension but fall back if false\n                            extensions.renderers[ext.name] = function (...args) {\n                                let ret = ext.renderer.apply(this, args);\n                                if (ret === false) {\n                                    ret = prevRenderer.apply(this, args);\n                                }\n                                return ret;\n                            };\n                        }\n                        else {\n                            extensions.renderers[ext.name] = ext.renderer;\n                        }\n                    }\n                    if ('tokenizer' in ext) { // Tokenizer Extensions\n                        if (!ext.level || (ext.level !== 'block' && ext.level !== 'inline')) {\n                            throw new Error(\"extension level must be 'block' or 'inline'\");\n                        }\n                        const extLevel = extensions[ext.level];\n                        if (extLevel) {\n                            extLevel.unshift(ext.tokenizer);\n                        }\n                        else {\n                            extensions[ext.level] = [ext.tokenizer];\n                        }\n                        if (ext.start) { // Function to check for start of token\n                            if (ext.level === 'block') {\n                                if (extensions.startBlock) {\n                                    extensions.startBlock.push(ext.start);\n                                }\n                                else {\n                                    extensions.startBlock = [ext.start];\n                                }\n                            }\n                            else if (ext.level === 'inline') {\n                                if (extensions.startInline) {\n                                    extensions.startInline.push(ext.start);\n                                }\n                                else {\n                                    extensions.startInline = [ext.start];\n                                }\n                            }\n                        }\n                    }\n                    if ('childTokens' in ext && ext.childTokens) { // Child tokens to be visited by walkTokens\n                        extensions.childTokens[ext.name] = ext.childTokens;\n                    }\n                });\n                opts.extensions = extensions;\n            }\n            // ==-- Parse \"overwrite\" extensions --== //\n            if (pack.renderer) {\n                const renderer = this.defaults.renderer || new _Renderer(this.defaults);\n                for (const prop in pack.renderer) {\n                    if (!(prop in renderer)) {\n                        throw new Error(`renderer '${prop}' does not exist`);\n                    }\n                    if (prop === 'options') {\n                        // ignore options property\n                        continue;\n                    }\n                    const rendererProp = prop;\n                    const rendererFunc = pack.renderer[rendererProp];\n                    const prevRenderer = renderer[rendererProp];\n                    // Replace renderer with func to run extension, but fall back if false\n                    renderer[rendererProp] = (...args) => {\n                        let ret = rendererFunc.apply(renderer, args);\n                        if (ret === false) {\n                            ret = prevRenderer.apply(renderer, args);\n                        }\n                        return ret || '';\n                    };\n                }\n                opts.renderer = renderer;\n            }\n            if (pack.tokenizer) {\n                const tokenizer = this.defaults.tokenizer || new _Tokenizer(this.defaults);\n                for (const prop in pack.tokenizer) {\n                    if (!(prop in tokenizer)) {\n                        throw new Error(`tokenizer '${prop}' does not exist`);\n                    }\n                    if (['options', 'rules', 'lexer'].includes(prop)) {\n                        // ignore options, rules, and lexer properties\n                        continue;\n                    }\n                    const tokenizerProp = prop;\n                    const tokenizerFunc = pack.tokenizer[tokenizerProp];\n                    const prevTokenizer = tokenizer[tokenizerProp];\n                    // Replace tokenizer with func to run extension, but fall back if false\n                    // @ts-expect-error cannot type tokenizer function dynamically\n                    tokenizer[tokenizerProp] = (...args) => {\n                        let ret = tokenizerFunc.apply(tokenizer, args);\n                        if (ret === false) {\n                            ret = prevTokenizer.apply(tokenizer, args);\n                        }\n                        return ret;\n                    };\n                }\n                opts.tokenizer = tokenizer;\n            }\n            // ==-- Parse Hooks extensions --== //\n            if (pack.hooks) {\n                const hooks = this.defaults.hooks || new _Hooks();\n                for (const prop in pack.hooks) {\n                    if (!(prop in hooks)) {\n                        throw new Error(`hook '${prop}' does not exist`);\n                    }\n                    if (prop === 'options') {\n                        // ignore options property\n                        continue;\n                    }\n                    const hooksProp = prop;\n                    const hooksFunc = pack.hooks[hooksProp];\n                    const prevHook = hooks[hooksProp];\n                    if (_Hooks.passThroughHooks.has(prop)) {\n                        // @ts-expect-error cannot type hook function dynamically\n                        hooks[hooksProp] = (arg) => {\n                            if (this.defaults.async) {\n                                return Promise.resolve(hooksFunc.call(hooks, arg)).then(ret => {\n                                    return prevHook.call(hooks, ret);\n                                });\n                            }\n                            const ret = hooksFunc.call(hooks, arg);\n                            return prevHook.call(hooks, ret);\n                        };\n                    }\n                    else {\n                        // @ts-expect-error cannot type hook function dynamically\n                        hooks[hooksProp] = (...args) => {\n                            let ret = hooksFunc.apply(hooks, args);\n                            if (ret === false) {\n                                ret = prevHook.apply(hooks, args);\n                            }\n                            return ret;\n                        };\n                    }\n                }\n                opts.hooks = hooks;\n            }\n            // ==-- Parse WalkTokens extensions --== //\n            if (pack.walkTokens) {\n                const walkTokens = this.defaults.walkTokens;\n                const packWalktokens = pack.walkTokens;\n                opts.walkTokens = function (token) {\n                    let values = [];\n                    values.push(packWalktokens.call(this, token));\n                    if (walkTokens) {\n                        values = values.concat(walkTokens.call(this, token));\n                    }\n                    return values;\n                };\n            }\n            this.defaults = { ...this.defaults, ...opts };\n        });\n        return this;\n    }\n    setOptions(opt) {\n        this.defaults = { ...this.defaults, ...opt };\n        return this;\n    }\n    lexer(src, options) {\n        return _Lexer.lex(src, options ?? this.defaults);\n    }\n    parser(tokens, options) {\n        return _Parser.parse(tokens, options ?? this.defaults);\n    }\n    #parseMarkdown(lexer, parser) {\n        return (src, options) => {\n            const origOpt = { ...options };\n            const opt = { ...this.defaults, ...origOpt };\n            // Show warning if an extension set async to true but the parse was called with async: false\n            if (this.defaults.async === true && origOpt.async === false) {\n                if (!opt.silent) {\n                    console.warn('marked(): The async option was set to true by an extension. The async: false option sent to parse will be ignored.');\n                }\n                opt.async = true;\n            }\n            const throwError = this.#onError(!!opt.silent, !!opt.async);\n            // throw error in case of non string input\n            if (typeof src === 'undefined' || src === null) {\n                return throwError(new Error('marked(): input parameter is undefined or null'));\n            }\n            if (typeof src !== 'string') {\n                return throwError(new Error('marked(): input parameter is of type '\n                    + Object.prototype.toString.call(src) + ', string expected'));\n            }\n            if (opt.hooks) {\n                opt.hooks.options = opt;\n            }\n            if (opt.async) {\n                return Promise.resolve(opt.hooks ? opt.hooks.preprocess(src) : src)\n                    .then(src => lexer(src, opt))\n                    .then(tokens => opt.hooks ? opt.hooks.processAllTokens(tokens) : tokens)\n                    .then(tokens => opt.walkTokens ? Promise.all(this.walkTokens(tokens, opt.walkTokens)).then(() => tokens) : tokens)\n                    .then(tokens => parser(tokens, opt))\n                    .then(html => opt.hooks ? opt.hooks.postprocess(html) : html)\n                    .catch(throwError);\n            }\n            try {\n                if (opt.hooks) {\n                    src = opt.hooks.preprocess(src);\n                }\n                let tokens = lexer(src, opt);\n                if (opt.hooks) {\n                    tokens = opt.hooks.processAllTokens(tokens);\n                }\n                if (opt.walkTokens) {\n                    this.walkTokens(tokens, opt.walkTokens);\n                }\n                let html = parser(tokens, opt);\n                if (opt.hooks) {\n                    html = opt.hooks.postprocess(html);\n                }\n                return html;\n            }\n            catch (e) {\n                return throwError(e);\n            }\n        };\n    }\n    #onError(silent, async) {\n        return (e) => {\n            e.message += '\\nPlease report this to https://github.com/markedjs/marked.';\n            if (silent) {\n                const msg = '<p>An error occurred:</p><pre>'\n                    + escape$1(e.message + '', true)\n                    + '</pre>';\n                if (async) {\n                    return Promise.resolve(msg);\n                }\n                return msg;\n            }\n            if (async) {\n                return Promise.reject(e);\n            }\n            throw e;\n        };\n    }\n}\n\nconst markedInstance = new Marked();\nfunction marked(src, opt) {\n    return markedInstance.parse(src, opt);\n}\n/**\n * Sets the default options.\n *\n * @param options Hash of options\n */\nmarked.options =\n    marked.setOptions = function (options) {\n        markedInstance.setOptions(options);\n        marked.defaults = markedInstance.defaults;\n        changeDefaults(marked.defaults);\n        return marked;\n    };\n/**\n * Gets the original marked default options.\n */\nmarked.getDefaults = _getDefaults;\nmarked.defaults = _defaults;\n/**\n * Use Extension\n */\nmarked.use = function (...args) {\n    markedInstance.use(...args);\n    marked.defaults = markedInstance.defaults;\n    changeDefaults(marked.defaults);\n    return marked;\n};\n/**\n * Run callback for every token\n */\nmarked.walkTokens = function (tokens, callback) {\n    return markedInstance.walkTokens(tokens, callback);\n};\n/**\n * Compiles markdown to HTML without enclosing `p` tag.\n *\n * @param src String of markdown source to be compiled\n * @param options Hash of options\n * @return String of compiled HTML\n */\nmarked.parseInline = markedInstance.parseInline;\n/**\n * Expose\n */\nmarked.Parser = _Parser;\nmarked.parser = _Parser.parse;\nmarked.Renderer = _Renderer;\nmarked.TextRenderer = _TextRenderer;\nmarked.Lexer = _Lexer;\nmarked.lexer = _Lexer.lex;\nmarked.Tokenizer = _Tokenizer;\nmarked.Hooks = _Hooks;\nmarked.parse = marked;\nconst options = marked.options;\nconst setOptions = marked.setOptions;\nconst use = marked.use;\nconst walkTokens = marked.walkTokens;\nconst parseInline = marked.parseInline;\nconst parse = marked;\nconst parser = _Parser.parse;\nconst lexer = _Lexer.lex;\n\nexport { _Hooks as Hooks, _Lexer as Lexer, Marked, _Parser as Parser, _Renderer as Renderer, _TextRenderer as TextRenderer, _Tokenizer as Tokenizer, _defaults as defaults, _getDefaults as getDefaults, lexer, marked, options, parse, parseInline, parser, setOptions, use, walkTokens };\n//# sourceMappingURL=marked.esm.js.map\n","/*! @license DOMPurify 3.2.7 | (c) Cure53 and other contributors | Released under the Apache license 2.0 and Mozilla Public License 2.0 | github.com/cure53/DOMPurify/blob/3.2.7/LICENSE */\n\nconst {\n  entries,\n  setPrototypeOf,\n  isFrozen,\n  getPrototypeOf,\n  getOwnPropertyDescriptor\n} = Object;\nlet {\n  freeze,\n  seal,\n  create\n} = Object; // eslint-disable-line import/no-mutable-exports\nlet {\n  apply,\n  construct\n} = typeof Reflect !== 'undefined' && Reflect;\nif (!freeze) {\n  freeze = function freeze(x) {\n    return x;\n  };\n}\nif (!seal) {\n  seal = function seal(x) {\n    return x;\n  };\n}\nif (!apply) {\n  apply = function apply(func, thisArg) {\n    for (var _len = arguments.length, args = new Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {\n      args[_key - 2] = arguments[_key];\n    }\n    return func.apply(thisArg, args);\n  };\n}\nif (!construct) {\n  construct = function construct(Func) {\n    for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n      args[_key2 - 1] = arguments[_key2];\n    }\n    return new Func(...args);\n  };\n}\nconst arrayForEach = unapply(Array.prototype.forEach);\nconst arrayLastIndexOf = unapply(Array.prototype.lastIndexOf);\nconst arrayPop = unapply(Array.prototype.pop);\nconst arrayPush = unapply(Array.prototype.push);\nconst arraySplice = unapply(Array.prototype.splice);\nconst stringToLowerCase = unapply(String.prototype.toLowerCase);\nconst stringToString = unapply(String.prototype.toString);\nconst stringMatch = unapply(String.prototype.match);\nconst stringReplace = unapply(String.prototype.replace);\nconst stringIndexOf = unapply(String.prototype.indexOf);\nconst stringTrim = unapply(String.prototype.trim);\nconst objectHasOwnProperty = unapply(Object.prototype.hasOwnProperty);\nconst regExpTest = unapply(RegExp.prototype.test);\nconst typeErrorCreate = unconstruct(TypeError);\n/**\n * Creates a new function that calls the given function with a specified thisArg and arguments.\n *\n * @param func - The function to be wrapped and called.\n * @returns A new function that calls the given function with a specified thisArg and arguments.\n */\nfunction unapply(func) {\n  return function (thisArg) {\n    if (thisArg instanceof RegExp) {\n      thisArg.lastIndex = 0;\n    }\n    for (var _len3 = arguments.length, args = new Array(_len3 > 1 ? _len3 - 1 : 0), _key3 = 1; _key3 < _len3; _key3++) {\n      args[_key3 - 1] = arguments[_key3];\n    }\n    return apply(func, thisArg, args);\n  };\n}\n/**\n * Creates a new function that constructs an instance of the given constructor function with the provided arguments.\n *\n * @param func - The constructor function to be wrapped and called.\n * @returns A new function that constructs an instance of the given constructor function with the provided arguments.\n */\nfunction unconstruct(Func) {\n  return function () {\n    for (var _len4 = arguments.length, args = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n      args[_key4] = arguments[_key4];\n    }\n    return construct(Func, args);\n  };\n}\n/**\n * Add properties to a lookup table\n *\n * @param set - The set to which elements will be added.\n * @param array - The array containing elements to be added to the set.\n * @param transformCaseFunc - An optional function to transform the case of each element before adding to the set.\n * @returns The modified set with added elements.\n */\nfunction addToSet(set, array) {\n  let transformCaseFunc = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : stringToLowerCase;\n  if (setPrototypeOf) {\n    // Make 'in' and truthy checks like Boolean(set.constructor)\n    // independent of any properties defined on Object.prototype.\n    // Prevent prototype setters from intercepting set as a this value.\n    setPrototypeOf(set, null);\n  }\n  let l = array.length;\n  while (l--) {\n    let element = array[l];\n    if (typeof element === 'string') {\n      const lcElement = transformCaseFunc(element);\n      if (lcElement !== element) {\n        // Config presets (e.g. tags.js, attrs.js) are immutable.\n        if (!isFrozen(array)) {\n          array[l] = lcElement;\n        }\n        element = lcElement;\n      }\n    }\n    set[element] = true;\n  }\n  return set;\n}\n/**\n * Clean up an array to harden against CSPP\n *\n * @param array - The array to be cleaned.\n * @returns The cleaned version of the array\n */\nfunction cleanArray(array) {\n  for (let index = 0; index < array.length; index++) {\n    const isPropertyExist = objectHasOwnProperty(array, index);\n    if (!isPropertyExist) {\n      array[index] = null;\n    }\n  }\n  return array;\n}\n/**\n * Shallow clone an object\n *\n * @param object - The object to be cloned.\n * @returns A new object that copies the original.\n */\nfunction clone(object) {\n  const newObject = create(null);\n  for (const [property, value] of entries(object)) {\n    const isPropertyExist = objectHasOwnProperty(object, property);\n    if (isPropertyExist) {\n      if (Array.isArray(value)) {\n        newObject[property] = cleanArray(value);\n      } else if (value && typeof value === 'object' && value.constructor === Object) {\n        newObject[property] = clone(value);\n      } else {\n        newObject[property] = value;\n      }\n    }\n  }\n  return newObject;\n}\n/**\n * This method automatically checks if the prop is function or getter and behaves accordingly.\n *\n * @param object - The object to look up the getter function in its prototype chain.\n * @param prop - The property name for which to find the getter function.\n * @returns The getter function found in the prototype chain or a fallback function.\n */\nfunction lookupGetter(object, prop) {\n  while (object !== null) {\n    const desc = getOwnPropertyDescriptor(object, prop);\n    if (desc) {\n      if (desc.get) {\n        return unapply(desc.get);\n      }\n      if (typeof desc.value === 'function') {\n        return unapply(desc.value);\n      }\n    }\n    object = getPrototypeOf(object);\n  }\n  function fallbackValue() {\n    return null;\n  }\n  return fallbackValue;\n}\n\nconst html$1 = freeze(['a', 'abbr', 'acronym', 'address', 'area', 'article', 'aside', 'audio', 'b', 'bdi', 'bdo', 'big', 'blink', 'blockquote', 'body', 'br', 'button', 'canvas', 'caption', 'center', 'cite', 'code', 'col', 'colgroup', 'content', 'data', 'datalist', 'dd', 'decorator', 'del', 'details', 'dfn', 'dialog', 'dir', 'div', 'dl', 'dt', 'element', 'em', 'fieldset', 'figcaption', 'figure', 'font', 'footer', 'form', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'head', 'header', 'hgroup', 'hr', 'html', 'i', 'img', 'input', 'ins', 'kbd', 'label', 'legend', 'li', 'main', 'map', 'mark', 'marquee', 'menu', 'menuitem', 'meter', 'nav', 'nobr', 'ol', 'optgroup', 'option', 'output', 'p', 'picture', 'pre', 'progress', 'q', 'rp', 'rt', 'ruby', 's', 'samp', 'search', 'section', 'select', 'shadow', 'slot', 'small', 'source', 'spacer', 'span', 'strike', 'strong', 'style', 'sub', 'summary', 'sup', 'table', 'tbody', 'td', 'template', 'textarea', 'tfoot', 'th', 'thead', 'time', 'tr', 'track', 'tt', 'u', 'ul', 'var', 'video', 'wbr']);\nconst svg$1 = freeze(['svg', 'a', 'altglyph', 'altglyphdef', 'altglyphitem', 'animatecolor', 'animatemotion', 'animatetransform', 'circle', 'clippath', 'defs', 'desc', 'ellipse', 'enterkeyhint', 'exportparts', 'filter', 'font', 'g', 'glyph', 'glyphref', 'hkern', 'image', 'inputmode', 'line', 'lineargradient', 'marker', 'mask', 'metadata', 'mpath', 'part', 'path', 'pattern', 'polygon', 'polyline', 'radialgradient', 'rect', 'slot', 'stop', 'style', 'switch', 'symbol', 'text', 'textpath', 'title', 'tref', 'tspan', 'view', 'vkern']);\nconst svgFilters = freeze(['feBlend', 'feColorMatrix', 'feComponentTransfer', 'feComposite', 'feConvolveMatrix', 'feDiffuseLighting', 'feDisplacementMap', 'feDistantLight', 'feDropShadow', 'feFlood', 'feFuncA', 'feFuncB', 'feFuncG', 'feFuncR', 'feGaussianBlur', 'feImage', 'feMerge', 'feMergeNode', 'feMorphology', 'feOffset', 'fePointLight', 'feSpecularLighting', 'feSpotLight', 'feTile', 'feTurbulence']);\n// List of SVG elements that are disallowed by default.\n// We still need to know them so that we can do namespace\n// checks properly in case one wants to add them to\n// allow-list.\nconst svgDisallowed = freeze(['animate', 'color-profile', 'cursor', 'discard', 'font-face', 'font-face-format', 'font-face-name', 'font-face-src', 'font-face-uri', 'foreignobject', 'hatch', 'hatchpath', 'mesh', 'meshgradient', 'meshpatch', 'meshrow', 'missing-glyph', 'script', 'set', 'solidcolor', 'unknown', 'use']);\nconst mathMl$1 = freeze(['math', 'menclose', 'merror', 'mfenced', 'mfrac', 'mglyph', 'mi', 'mlabeledtr', 'mmultiscripts', 'mn', 'mo', 'mover', 'mpadded', 'mphantom', 'mroot', 'mrow', 'ms', 'mspace', 'msqrt', 'mstyle', 'msub', 'msup', 'msubsup', 'mtable', 'mtd', 'mtext', 'mtr', 'munder', 'munderover', 'mprescripts']);\n// Similarly to SVG, we want to know all MathML elements,\n// even those that we disallow by default.\nconst mathMlDisallowed = freeze(['maction', 'maligngroup', 'malignmark', 'mlongdiv', 'mscarries', 'mscarry', 'msgroup', 'mstack', 'msline', 'msrow', 'semantics', 'annotation', 'annotation-xml', 'mprescripts', 'none']);\nconst text = freeze(['#text']);\n\nconst html = freeze(['accept', 'action', 'align', 'alt', 'autocapitalize', 'autocomplete', 'autopictureinpicture', 'autoplay', 'background', 'bgcolor', 'border', 'capture', 'cellpadding', 'cellspacing', 'checked', 'cite', 'class', 'clear', 'color', 'cols', 'colspan', 'controls', 'controlslist', 'coords', 'crossorigin', 'datetime', 'decoding', 'default', 'dir', 'disabled', 'disablepictureinpicture', 'disableremoteplayback', 'download', 'draggable', 'enctype', 'enterkeyhint', 'exportparts', 'face', 'for', 'headers', 'height', 'hidden', 'high', 'href', 'hreflang', 'id', 'inert', 'inputmode', 'integrity', 'ismap', 'kind', 'label', 'lang', 'list', 'loading', 'loop', 'low', 'max', 'maxlength', 'media', 'method', 'min', 'minlength', 'multiple', 'muted', 'name', 'nonce', 'noshade', 'novalidate', 'nowrap', 'open', 'optimum', 'part', 'pattern', 'placeholder', 'playsinline', 'popover', 'popovertarget', 'popovertargetaction', 'poster', 'preload', 'pubdate', 'radiogroup', 'readonly', 'rel', 'required', 'rev', 'reversed', 'role', 'rows', 'rowspan', 'spellcheck', 'scope', 'selected', 'shape', 'size', 'sizes', 'slot', 'span', 'srclang', 'start', 'src', 'srcset', 'step', 'style', 'summary', 'tabindex', 'title', 'translate', 'type', 'usemap', 'valign', 'value', 'width', 'wrap', 'xmlns', 'slot']);\nconst svg = freeze(['accent-height', 'accumulate', 'additive', 'alignment-baseline', 'amplitude', 'ascent', 'attributename', 'attributetype', 'azimuth', 'basefrequency', 'baseline-shift', 'begin', 'bias', 'by', 'class', 'clip', 'clippathunits', 'clip-path', 'clip-rule', 'color', 'color-interpolation', 'color-interpolation-filters', 'color-profile', 'color-rendering', 'cx', 'cy', 'd', 'dx', 'dy', 'diffuseconstant', 'direction', 'display', 'divisor', 'dur', 'edgemode', 'elevation', 'end', 'exponent', 'fill', 'fill-opacity', 'fill-rule', 'filter', 'filterunits', 'flood-color', 'flood-opacity', 'font-family', 'font-size', 'font-size-adjust', 'font-stretch', 'font-style', 'font-variant', 'font-weight', 'fx', 'fy', 'g1', 'g2', 'glyph-name', 'glyphref', 'gradientunits', 'gradienttransform', 'height', 'href', 'id', 'image-rendering', 'in', 'in2', 'intercept', 'k', 'k1', 'k2', 'k3', 'k4', 'kerning', 'keypoints', 'keysplines', 'keytimes', 'lang', 'lengthadjust', 'letter-spacing', 'kernelmatrix', 'kernelunitlength', 'lighting-color', 'local', 'marker-end', 'marker-mid', 'marker-start', 'markerheight', 'markerunits', 'markerwidth', 'maskcontentunits', 'maskunits', 'max', 'mask', 'media', 'method', 'mode', 'min', 'name', 'numoctaves', 'offset', 'operator', 'opacity', 'order', 'orient', 'orientation', 'origin', 'overflow', 'paint-order', 'path', 'pathlength', 'patterncontentunits', 'patterntransform', 'patternunits', 'points', 'preservealpha', 'preserveaspectratio', 'primitiveunits', 'r', 'rx', 'ry', 'radius', 'refx', 'refy', 'repeatcount', 'repeatdur', 'restart', 'result', 'rotate', 'scale', 'seed', 'shape-rendering', 'slope', 'specularconstant', 'specularexponent', 'spreadmethod', 'startoffset', 'stddeviation', 'stitchtiles', 'stop-color', 'stop-opacity', 'stroke-dasharray', 'stroke-dashoffset', 'stroke-linecap', 'stroke-linejoin', 'stroke-miterlimit', 'stroke-opacity', 'stroke', 'stroke-width', 'style', 'surfacescale', 'systemlanguage', 'tabindex', 'tablevalues', 'targetx', 'targety', 'transform', 'transform-origin', 'text-anchor', 'text-decoration', 'text-rendering', 'textlength', 'type', 'u1', 'u2', 'unicode', 'values', 'viewbox', 'visibility', 'version', 'vert-adv-y', 'vert-origin-x', 'vert-origin-y', 'width', 'word-spacing', 'wrap', 'writing-mode', 'xchannelselector', 'ychannelselector', 'x', 'x1', 'x2', 'xmlns', 'y', 'y1', 'y2', 'z', 'zoomandpan']);\nconst mathMl = freeze(['accent', 'accentunder', 'align', 'bevelled', 'close', 'columnsalign', 'columnlines', 'columnspan', 'denomalign', 'depth', 'dir', 'display', 'displaystyle', 'encoding', 'fence', 'frame', 'height', 'href', 'id', 'largeop', 'length', 'linethickness', 'lspace', 'lquote', 'mathbackground', 'mathcolor', 'mathsize', 'mathvariant', 'maxsize', 'minsize', 'movablelimits', 'notation', 'numalign', 'open', 'rowalign', 'rowlines', 'rowspacing', 'rowspan', 'rspace', 'rquote', 'scriptlevel', 'scriptminsize', 'scriptsizemultiplier', 'selection', 'separator', 'separators', 'stretchy', 'subscriptshift', 'supscriptshift', 'symmetric', 'voffset', 'width', 'xmlns']);\nconst xml = freeze(['xlink:href', 'xml:id', 'xlink:title', 'xml:space', 'xmlns:xlink']);\n\n// eslint-disable-next-line unicorn/better-regex\nconst MUSTACHE_EXPR = seal(/\\{\\{[\\w\\W]*|[\\w\\W]*\\}\\}/gm); // Specify template detection regex for SAFE_FOR_TEMPLATES mode\nconst ERB_EXPR = seal(/<%[\\w\\W]*|[\\w\\W]*%>/gm);\nconst TMPLIT_EXPR = seal(/\\$\\{[\\w\\W]*/gm); // eslint-disable-line unicorn/better-regex\nconst DATA_ATTR = seal(/^data-[\\-\\w.\\u00B7-\\uFFFF]+$/); // eslint-disable-line no-useless-escape\nconst ARIA_ATTR = seal(/^aria-[\\-\\w]+$/); // eslint-disable-line no-useless-escape\nconst IS_ALLOWED_URI = seal(/^(?:(?:(?:f|ht)tps?|mailto|tel|callto|sms|cid|xmpp|matrix):|[^a-z]|[a-z+.\\-]+(?:[^a-z+.\\-:]|$))/i // eslint-disable-line no-useless-escape\n);\nconst IS_SCRIPT_OR_DATA = seal(/^(?:\\w+script|data):/i);\nconst ATTR_WHITESPACE = seal(/[\\u0000-\\u0020\\u00A0\\u1680\\u180E\\u2000-\\u2029\\u205F\\u3000]/g // eslint-disable-line no-control-regex\n);\nconst DOCTYPE_NAME = seal(/^html$/i);\nconst CUSTOM_ELEMENT = seal(/^[a-z][.\\w]*(-[.\\w]+)+$/i);\n\nvar EXPRESSIONS = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  ARIA_ATTR: ARIA_ATTR,\n  ATTR_WHITESPACE: ATTR_WHITESPACE,\n  CUSTOM_ELEMENT: CUSTOM_ELEMENT,\n  DATA_ATTR: DATA_ATTR,\n  DOCTYPE_NAME: DOCTYPE_NAME,\n  ERB_EXPR: ERB_EXPR,\n  IS_ALLOWED_URI: IS_ALLOWED_URI,\n  IS_SCRIPT_OR_DATA: IS_SCRIPT_OR_DATA,\n  MUSTACHE_EXPR: MUSTACHE_EXPR,\n  TMPLIT_EXPR: TMPLIT_EXPR\n});\n\n/* eslint-disable @typescript-eslint/indent */\n// https://developer.mozilla.org/en-US/docs/Web/API/Node/nodeType\nconst NODE_TYPE = {\n  element: 1,\n  attribute: 2,\n  text: 3,\n  cdataSection: 4,\n  entityReference: 5,\n  // Deprecated\n  entityNode: 6,\n  // Deprecated\n  progressingInstruction: 7,\n  comment: 8,\n  document: 9,\n  documentType: 10,\n  documentFragment: 11,\n  notation: 12 // Deprecated\n};\nconst getGlobal = function getGlobal() {\n  return typeof window === 'undefined' ? null : window;\n};\n/**\n * Creates a no-op policy for internal use only.\n * Don't export this function outside this module!\n * @param trustedTypes The policy factory.\n * @param purifyHostElement The Script element used to load DOMPurify (to determine policy name suffix).\n * @return The policy created (or null, if Trusted Types\n * are not supported or creating the policy failed).\n */\nconst _createTrustedTypesPolicy = function _createTrustedTypesPolicy(trustedTypes, purifyHostElement) {\n  if (typeof trustedTypes !== 'object' || typeof trustedTypes.createPolicy !== 'function') {\n    return null;\n  }\n  // Allow the callers to control the unique policy name\n  // by adding a data-tt-policy-suffix to the script element with the DOMPurify.\n  // Policy creation with duplicate names throws in Trusted Types.\n  let suffix = null;\n  const ATTR_NAME = 'data-tt-policy-suffix';\n  if (purifyHostElement && purifyHostElement.hasAttribute(ATTR_NAME)) {\n    suffix = purifyHostElement.getAttribute(ATTR_NAME);\n  }\n  const policyName = 'dompurify' + (suffix ? '#' + suffix : '');\n  try {\n    return trustedTypes.createPolicy(policyName, {\n      createHTML(html) {\n        return html;\n      },\n      createScriptURL(scriptUrl) {\n        return scriptUrl;\n      }\n    });\n  } catch (_) {\n    // Policy creation failed (most likely another DOMPurify script has\n    // already run). Skip creating the policy, as this will only cause errors\n    // if TT are enforced.\n    console.warn('TrustedTypes policy ' + policyName + ' could not be created.');\n    return null;\n  }\n};\nconst _createHooksMap = function _createHooksMap() {\n  return {\n    afterSanitizeAttributes: [],\n    afterSanitizeElements: [],\n    afterSanitizeShadowDOM: [],\n    beforeSanitizeAttributes: [],\n    beforeSanitizeElements: [],\n    beforeSanitizeShadowDOM: [],\n    uponSanitizeAttribute: [],\n    uponSanitizeElement: [],\n    uponSanitizeShadowNode: []\n  };\n};\nfunction createDOMPurify() {\n  let window = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : getGlobal();\n  const DOMPurify = root => createDOMPurify(root);\n  DOMPurify.version = '3.2.7';\n  DOMPurify.removed = [];\n  if (!window || !window.document || window.document.nodeType !== NODE_TYPE.document || !window.Element) {\n    // Not running in a browser, provide a factory function\n    // so that you can pass your own Window\n    DOMPurify.isSupported = false;\n    return DOMPurify;\n  }\n  let {\n    document\n  } = window;\n  const originalDocument = document;\n  const currentScript = originalDocument.currentScript;\n  const {\n    DocumentFragment,\n    HTMLTemplateElement,\n    Node,\n    Element,\n    NodeFilter,\n    NamedNodeMap = window.NamedNodeMap || window.MozNamedAttrMap,\n    HTMLFormElement,\n    DOMParser,\n    trustedTypes\n  } = window;\n  const ElementPrototype = Element.prototype;\n  const cloneNode = lookupGetter(ElementPrototype, 'cloneNode');\n  const remove = lookupGetter(ElementPrototype, 'remove');\n  const getNextSibling = lookupGetter(ElementPrototype, 'nextSibling');\n  const getChildNodes = lookupGetter(ElementPrototype, 'childNodes');\n  const getParentNode = lookupGetter(ElementPrototype, 'parentNode');\n  // As per issue #47, the web-components registry is inherited by a\n  // new document created via createHTMLDocument. As per the spec\n  // (http://w3c.github.io/webcomponents/spec/custom/#creating-and-passing-registries)\n  // a new empty registry is used when creating a template contents owner\n  // document, so we use that as our parent document to ensure nothing\n  // is inherited.\n  if (typeof HTMLTemplateElement === 'function') {\n    const template = document.createElement('template');\n    if (template.content && template.content.ownerDocument) {\n      document = template.content.ownerDocument;\n    }\n  }\n  let trustedTypesPolicy;\n  let emptyHTML = '';\n  const {\n    implementation,\n    createNodeIterator,\n    createDocumentFragment,\n    getElementsByTagName\n  } = document;\n  const {\n    importNode\n  } = originalDocument;\n  let hooks = _createHooksMap();\n  /**\n   * Expose whether this browser supports running the full DOMPurify.\n   */\n  DOMPurify.isSupported = typeof entries === 'function' && typeof getParentNode === 'function' && implementation && implementation.createHTMLDocument !== undefined;\n  const {\n    MUSTACHE_EXPR,\n    ERB_EXPR,\n    TMPLIT_EXPR,\n    DATA_ATTR,\n    ARIA_ATTR,\n    IS_SCRIPT_OR_DATA,\n    ATTR_WHITESPACE,\n    CUSTOM_ELEMENT\n  } = EXPRESSIONS;\n  let {\n    IS_ALLOWED_URI: IS_ALLOWED_URI$1\n  } = EXPRESSIONS;\n  /**\n   * We consider the elements and attributes below to be safe. Ideally\n   * don't add any new ones but feel free to remove unwanted ones.\n   */\n  /* allowed element names */\n  let ALLOWED_TAGS = null;\n  const DEFAULT_ALLOWED_TAGS = addToSet({}, [...html$1, ...svg$1, ...svgFilters, ...mathMl$1, ...text]);\n  /* Allowed attribute names */\n  let ALLOWED_ATTR = null;\n  const DEFAULT_ALLOWED_ATTR = addToSet({}, [...html, ...svg, ...mathMl, ...xml]);\n  /*\n   * Configure how DOMPurify should handle custom elements and their attributes as well as customized built-in elements.\n   * @property {RegExp|Function|null} tagNameCheck one of [null, regexPattern, predicate]. Default: `null` (disallow any custom elements)\n   * @property {RegExp|Function|null} attributeNameCheck one of [null, regexPattern, predicate]. Default: `null` (disallow any attributes not on the allow list)\n   * @property {boolean} allowCustomizedBuiltInElements allow custom elements derived from built-ins if they pass CUSTOM_ELEMENT_HANDLING.tagNameCheck. Default: `false`.\n   */\n  let CUSTOM_ELEMENT_HANDLING = Object.seal(create(null, {\n    tagNameCheck: {\n      writable: true,\n      configurable: false,\n      enumerable: true,\n      value: null\n    },\n    attributeNameCheck: {\n      writable: true,\n      configurable: false,\n      enumerable: true,\n      value: null\n    },\n    allowCustomizedBuiltInElements: {\n      writable: true,\n      configurable: false,\n      enumerable: true,\n      value: false\n    }\n  }));\n  /* Explicitly forbidden tags (overrides ALLOWED_TAGS/ADD_TAGS) */\n  let FORBID_TAGS = null;\n  /* Explicitly forbidden attributes (overrides ALLOWED_ATTR/ADD_ATTR) */\n  let FORBID_ATTR = null;\n  /* Decide if ARIA attributes are okay */\n  let ALLOW_ARIA_ATTR = true;\n  /* Decide if custom data attributes are okay */\n  let ALLOW_DATA_ATTR = true;\n  /* Decide if unknown protocols are okay */\n  let ALLOW_UNKNOWN_PROTOCOLS = false;\n  /* Decide if self-closing tags in attributes are allowed.\n   * Usually removed due to a mXSS issue in jQuery 3.0 */\n  let ALLOW_SELF_CLOSE_IN_ATTR = true;\n  /* Output should be safe for common template engines.\n   * This means, DOMPurify removes data attributes, mustaches and ERB\n   */\n  let SAFE_FOR_TEMPLATES = false;\n  /* Output should be safe even for XML used within HTML and alike.\n   * This means, DOMPurify removes comments when containing risky content.\n   */\n  let SAFE_FOR_XML = true;\n  /* Decide if document with <html>... should be returned */\n  let WHOLE_DOCUMENT = false;\n  /* Track whether config is already set on this instance of DOMPurify. */\n  let SET_CONFIG = false;\n  /* Decide if all elements (e.g. style, script) must be children of\n   * document.body. By default, browsers might move them to document.head */\n  let FORCE_BODY = false;\n  /* Decide if a DOM `HTMLBodyElement` should be returned, instead of a html\n   * string (or a TrustedHTML object if Trusted Types are supported).\n   * If `WHOLE_DOCUMENT` is enabled a `HTMLHtmlElement` will be returned instead\n   */\n  let RETURN_DOM = false;\n  /* Decide if a DOM `DocumentFragment` should be returned, instead of a html\n   * string  (or a TrustedHTML object if Trusted Types are supported) */\n  let RETURN_DOM_FRAGMENT = false;\n  /* Try to return a Trusted Type object instead of a string, return a string in\n   * case Trusted Types are not supported  */\n  let RETURN_TRUSTED_TYPE = false;\n  /* Output should be free from DOM clobbering attacks?\n   * This sanitizes markups named with colliding, clobberable built-in DOM APIs.\n   */\n  let SANITIZE_DOM = true;\n  /* Achieve full DOM Clobbering protection by isolating the namespace of named\n   * properties and JS variables, mitigating attacks that abuse the HTML/DOM spec rules.\n   *\n   * HTML/DOM spec rules that enable DOM Clobbering:\n   *   - Named Access on Window (§7.3.3)\n   *   - DOM Tree Accessors (§3.1.5)\n   *   - Form Element Parent-Child Relations (§4.10.3)\n   *   - Iframe srcdoc / Nested WindowProxies (§4.8.5)\n   *   - HTMLCollection (§4.2.10.2)\n   *\n   * Namespace isolation is implemented by prefixing `id` and `name` attributes\n   * with a constant string, i.e., `user-content-`\n   */\n  let SANITIZE_NAMED_PROPS = false;\n  const SANITIZE_NAMED_PROPS_PREFIX = 'user-content-';\n  /* Keep element content when removing element? */\n  let KEEP_CONTENT = true;\n  /* If a `Node` is passed to sanitize(), then performs sanitization in-place instead\n   * of importing it into a new Document and returning a sanitized copy */\n  let IN_PLACE = false;\n  /* Allow usage of profiles like html, svg and mathMl */\n  let USE_PROFILES = {};\n  /* Tags to ignore content of when KEEP_CONTENT is true */\n  let FORBID_CONTENTS = null;\n  const DEFAULT_FORBID_CONTENTS = addToSet({}, ['annotation-xml', 'audio', 'colgroup', 'desc', 'foreignobject', 'head', 'iframe', 'math', 'mi', 'mn', 'mo', 'ms', 'mtext', 'noembed', 'noframes', 'noscript', 'plaintext', 'script', 'style', 'svg', 'template', 'thead', 'title', 'video', 'xmp']);\n  /* Tags that are safe for data: URIs */\n  let DATA_URI_TAGS = null;\n  const DEFAULT_DATA_URI_TAGS = addToSet({}, ['audio', 'video', 'img', 'source', 'image', 'track']);\n  /* Attributes safe for values like \"javascript:\" */\n  let URI_SAFE_ATTRIBUTES = null;\n  const DEFAULT_URI_SAFE_ATTRIBUTES = addToSet({}, ['alt', 'class', 'for', 'id', 'label', 'name', 'pattern', 'placeholder', 'role', 'summary', 'title', 'value', 'style', 'xmlns']);\n  const MATHML_NAMESPACE = 'http://www.w3.org/1998/Math/MathML';\n  const SVG_NAMESPACE = 'http://www.w3.org/2000/svg';\n  const HTML_NAMESPACE = 'http://www.w3.org/1999/xhtml';\n  /* Document namespace */\n  let NAMESPACE = HTML_NAMESPACE;\n  let IS_EMPTY_INPUT = false;\n  /* Allowed XHTML+XML namespaces */\n  let ALLOWED_NAMESPACES = null;\n  const DEFAULT_ALLOWED_NAMESPACES = addToSet({}, [MATHML_NAMESPACE, SVG_NAMESPACE, HTML_NAMESPACE], stringToString);\n  let MATHML_TEXT_INTEGRATION_POINTS = addToSet({}, ['mi', 'mo', 'mn', 'ms', 'mtext']);\n  let HTML_INTEGRATION_POINTS = addToSet({}, ['annotation-xml']);\n  // Certain elements are allowed in both SVG and HTML\n  // namespace. We need to specify them explicitly\n  // so that they don't get erroneously deleted from\n  // HTML namespace.\n  const COMMON_SVG_AND_HTML_ELEMENTS = addToSet({}, ['title', 'style', 'font', 'a', 'script']);\n  /* Parsing of strict XHTML documents */\n  let PARSER_MEDIA_TYPE = null;\n  const SUPPORTED_PARSER_MEDIA_TYPES = ['application/xhtml+xml', 'text/html'];\n  const DEFAULT_PARSER_MEDIA_TYPE = 'text/html';\n  let transformCaseFunc = null;\n  /* Keep a reference to config to pass to hooks */\n  let CONFIG = null;\n  /* Ideally, do not touch anything below this line */\n  /* ______________________________________________ */\n  const formElement = document.createElement('form');\n  const isRegexOrFunction = function isRegexOrFunction(testValue) {\n    return testValue instanceof RegExp || testValue instanceof Function;\n  };\n  /**\n   * _parseConfig\n   *\n   * @param cfg optional config literal\n   */\n  // eslint-disable-next-line complexity\n  const _parseConfig = function _parseConfig() {\n    let cfg = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    if (CONFIG && CONFIG === cfg) {\n      return;\n    }\n    /* Shield configuration object from tampering */\n    if (!cfg || typeof cfg !== 'object') {\n      cfg = {};\n    }\n    /* Shield configuration object from prototype pollution */\n    cfg = clone(cfg);\n    PARSER_MEDIA_TYPE =\n    // eslint-disable-next-line unicorn/prefer-includes\n    SUPPORTED_PARSER_MEDIA_TYPES.indexOf(cfg.PARSER_MEDIA_TYPE) === -1 ? DEFAULT_PARSER_MEDIA_TYPE : cfg.PARSER_MEDIA_TYPE;\n    // HTML tags and attributes are not case-sensitive, converting to lowercase. Keeping XHTML as is.\n    transformCaseFunc = PARSER_MEDIA_TYPE === 'application/xhtml+xml' ? stringToString : stringToLowerCase;\n    /* Set configuration parameters */\n    ALLOWED_TAGS = objectHasOwnProperty(cfg, 'ALLOWED_TAGS') ? addToSet({}, cfg.ALLOWED_TAGS, transformCaseFunc) : DEFAULT_ALLOWED_TAGS;\n    ALLOWED_ATTR = objectHasOwnProperty(cfg, 'ALLOWED_ATTR') ? addToSet({}, cfg.ALLOWED_ATTR, transformCaseFunc) : DEFAULT_ALLOWED_ATTR;\n    ALLOWED_NAMESPACES = objectHasOwnProperty(cfg, 'ALLOWED_NAMESPACES') ? addToSet({}, cfg.ALLOWED_NAMESPACES, stringToString) : DEFAULT_ALLOWED_NAMESPACES;\n    URI_SAFE_ATTRIBUTES = objectHasOwnProperty(cfg, 'ADD_URI_SAFE_ATTR') ? addToSet(clone(DEFAULT_URI_SAFE_ATTRIBUTES), cfg.ADD_URI_SAFE_ATTR, transformCaseFunc) : DEFAULT_URI_SAFE_ATTRIBUTES;\n    DATA_URI_TAGS = objectHasOwnProperty(cfg, 'ADD_DATA_URI_TAGS') ? addToSet(clone(DEFAULT_DATA_URI_TAGS), cfg.ADD_DATA_URI_TAGS, transformCaseFunc) : DEFAULT_DATA_URI_TAGS;\n    FORBID_CONTENTS = objectHasOwnProperty(cfg, 'FORBID_CONTENTS') ? addToSet({}, cfg.FORBID_CONTENTS, transformCaseFunc) : DEFAULT_FORBID_CONTENTS;\n    FORBID_TAGS = objectHasOwnProperty(cfg, 'FORBID_TAGS') ? addToSet({}, cfg.FORBID_TAGS, transformCaseFunc) : clone({});\n    FORBID_ATTR = objectHasOwnProperty(cfg, 'FORBID_ATTR') ? addToSet({}, cfg.FORBID_ATTR, transformCaseFunc) : clone({});\n    USE_PROFILES = objectHasOwnProperty(cfg, 'USE_PROFILES') ? cfg.USE_PROFILES : false;\n    ALLOW_ARIA_ATTR = cfg.ALLOW_ARIA_ATTR !== false; // Default true\n    ALLOW_DATA_ATTR = cfg.ALLOW_DATA_ATTR !== false; // Default true\n    ALLOW_UNKNOWN_PROTOCOLS = cfg.ALLOW_UNKNOWN_PROTOCOLS || false; // Default false\n    ALLOW_SELF_CLOSE_IN_ATTR = cfg.ALLOW_SELF_CLOSE_IN_ATTR !== false; // Default true\n    SAFE_FOR_TEMPLATES = cfg.SAFE_FOR_TEMPLATES || false; // Default false\n    SAFE_FOR_XML = cfg.SAFE_FOR_XML !== false; // Default true\n    WHOLE_DOCUMENT = cfg.WHOLE_DOCUMENT || false; // Default false\n    RETURN_DOM = cfg.RETURN_DOM || false; // Default false\n    RETURN_DOM_FRAGMENT = cfg.RETURN_DOM_FRAGMENT || false; // Default false\n    RETURN_TRUSTED_TYPE = cfg.RETURN_TRUSTED_TYPE || false; // Default false\n    FORCE_BODY = cfg.FORCE_BODY || false; // Default false\n    SANITIZE_DOM = cfg.SANITIZE_DOM !== false; // Default true\n    SANITIZE_NAMED_PROPS = cfg.SANITIZE_NAMED_PROPS || false; // Default false\n    KEEP_CONTENT = cfg.KEEP_CONTENT !== false; // Default true\n    IN_PLACE = cfg.IN_PLACE || false; // Default false\n    IS_ALLOWED_URI$1 = cfg.ALLOWED_URI_REGEXP || IS_ALLOWED_URI;\n    NAMESPACE = cfg.NAMESPACE || HTML_NAMESPACE;\n    MATHML_TEXT_INTEGRATION_POINTS = cfg.MATHML_TEXT_INTEGRATION_POINTS || MATHML_TEXT_INTEGRATION_POINTS;\n    HTML_INTEGRATION_POINTS = cfg.HTML_INTEGRATION_POINTS || HTML_INTEGRATION_POINTS;\n    CUSTOM_ELEMENT_HANDLING = cfg.CUSTOM_ELEMENT_HANDLING || {};\n    if (cfg.CUSTOM_ELEMENT_HANDLING && isRegexOrFunction(cfg.CUSTOM_ELEMENT_HANDLING.tagNameCheck)) {\n      CUSTOM_ELEMENT_HANDLING.tagNameCheck = cfg.CUSTOM_ELEMENT_HANDLING.tagNameCheck;\n    }\n    if (cfg.CUSTOM_ELEMENT_HANDLING && isRegexOrFunction(cfg.CUSTOM_ELEMENT_HANDLING.attributeNameCheck)) {\n      CUSTOM_ELEMENT_HANDLING.attributeNameCheck = cfg.CUSTOM_ELEMENT_HANDLING.attributeNameCheck;\n    }\n    if (cfg.CUSTOM_ELEMENT_HANDLING && typeof cfg.CUSTOM_ELEMENT_HANDLING.allowCustomizedBuiltInElements === 'boolean') {\n      CUSTOM_ELEMENT_HANDLING.allowCustomizedBuiltInElements = cfg.CUSTOM_ELEMENT_HANDLING.allowCustomizedBuiltInElements;\n    }\n    if (SAFE_FOR_TEMPLATES) {\n      ALLOW_DATA_ATTR = false;\n    }\n    if (RETURN_DOM_FRAGMENT) {\n      RETURN_DOM = true;\n    }\n    /* Parse profile info */\n    if (USE_PROFILES) {\n      ALLOWED_TAGS = addToSet({}, text);\n      ALLOWED_ATTR = [];\n      if (USE_PROFILES.html === true) {\n        addToSet(ALLOWED_TAGS, html$1);\n        addToSet(ALLOWED_ATTR, html);\n      }\n      if (USE_PROFILES.svg === true) {\n        addToSet(ALLOWED_TAGS, svg$1);\n        addToSet(ALLOWED_ATTR, svg);\n        addToSet(ALLOWED_ATTR, xml);\n      }\n      if (USE_PROFILES.svgFilters === true) {\n        addToSet(ALLOWED_TAGS, svgFilters);\n        addToSet(ALLOWED_ATTR, svg);\n        addToSet(ALLOWED_ATTR, xml);\n      }\n      if (USE_PROFILES.mathMl === true) {\n        addToSet(ALLOWED_TAGS, mathMl$1);\n        addToSet(ALLOWED_ATTR, mathMl);\n        addToSet(ALLOWED_ATTR, xml);\n      }\n    }\n    /* Merge configuration parameters */\n    if (cfg.ADD_TAGS) {\n      if (ALLOWED_TAGS === DEFAULT_ALLOWED_TAGS) {\n        ALLOWED_TAGS = clone(ALLOWED_TAGS);\n      }\n      addToSet(ALLOWED_TAGS, cfg.ADD_TAGS, transformCaseFunc);\n    }\n    if (cfg.ADD_ATTR) {\n      if (ALLOWED_ATTR === DEFAULT_ALLOWED_ATTR) {\n        ALLOWED_ATTR = clone(ALLOWED_ATTR);\n      }\n      addToSet(ALLOWED_ATTR, cfg.ADD_ATTR, transformCaseFunc);\n    }\n    if (cfg.ADD_URI_SAFE_ATTR) {\n      addToSet(URI_SAFE_ATTRIBUTES, cfg.ADD_URI_SAFE_ATTR, transformCaseFunc);\n    }\n    if (cfg.FORBID_CONTENTS) {\n      if (FORBID_CONTENTS === DEFAULT_FORBID_CONTENTS) {\n        FORBID_CONTENTS = clone(FORBID_CONTENTS);\n      }\n      addToSet(FORBID_CONTENTS, cfg.FORBID_CONTENTS, transformCaseFunc);\n    }\n    /* Add #text in case KEEP_CONTENT is set to true */\n    if (KEEP_CONTENT) {\n      ALLOWED_TAGS['#text'] = true;\n    }\n    /* Add html, head and body to ALLOWED_TAGS in case WHOLE_DOCUMENT is true */\n    if (WHOLE_DOCUMENT) {\n      addToSet(ALLOWED_TAGS, ['html', 'head', 'body']);\n    }\n    /* Add tbody to ALLOWED_TAGS in case tables are permitted, see #286, #365 */\n    if (ALLOWED_TAGS.table) {\n      addToSet(ALLOWED_TAGS, ['tbody']);\n      delete FORBID_TAGS.tbody;\n    }\n    if (cfg.TRUSTED_TYPES_POLICY) {\n      if (typeof cfg.TRUSTED_TYPES_POLICY.createHTML !== 'function') {\n        throw typeErrorCreate('TRUSTED_TYPES_POLICY configuration option must provide a \"createHTML\" hook.');\n      }\n      if (typeof cfg.TRUSTED_TYPES_POLICY.createScriptURL !== 'function') {\n        throw typeErrorCreate('TRUSTED_TYPES_POLICY configuration option must provide a \"createScriptURL\" hook.');\n      }\n      // Overwrite existing TrustedTypes policy.\n      trustedTypesPolicy = cfg.TRUSTED_TYPES_POLICY;\n      // Sign local variables required by `sanitize`.\n      emptyHTML = trustedTypesPolicy.createHTML('');\n    } else {\n      // Uninitialized policy, attempt to initialize the internal dompurify policy.\n      if (trustedTypesPolicy === undefined) {\n        trustedTypesPolicy = _createTrustedTypesPolicy(trustedTypes, currentScript);\n      }\n      // If creating the internal policy succeeded sign internal variables.\n      if (trustedTypesPolicy !== null && typeof emptyHTML === 'string') {\n        emptyHTML = trustedTypesPolicy.createHTML('');\n      }\n    }\n    // Prevent further manipulation of configuration.\n    // Not available in IE8, Safari 5, etc.\n    if (freeze) {\n      freeze(cfg);\n    }\n    CONFIG = cfg;\n  };\n  /* Keep track of all possible SVG and MathML tags\n   * so that we can perform the namespace checks\n   * correctly. */\n  const ALL_SVG_TAGS = addToSet({}, [...svg$1, ...svgFilters, ...svgDisallowed]);\n  const ALL_MATHML_TAGS = addToSet({}, [...mathMl$1, ...mathMlDisallowed]);\n  /**\n   * @param element a DOM element whose namespace is being checked\n   * @returns Return false if the element has a\n   *  namespace that a spec-compliant parser would never\n   *  return. Return true otherwise.\n   */\n  const _checkValidNamespace = function _checkValidNamespace(element) {\n    let parent = getParentNode(element);\n    // In JSDOM, if we're inside shadow DOM, then parentNode\n    // can be null. We just simulate parent in this case.\n    if (!parent || !parent.tagName) {\n      parent = {\n        namespaceURI: NAMESPACE,\n        tagName: 'template'\n      };\n    }\n    const tagName = stringToLowerCase(element.tagName);\n    const parentTagName = stringToLowerCase(parent.tagName);\n    if (!ALLOWED_NAMESPACES[element.namespaceURI]) {\n      return false;\n    }\n    if (element.namespaceURI === SVG_NAMESPACE) {\n      // The only way to switch from HTML namespace to SVG\n      // is via <svg>. If it happens via any other tag, then\n      // it should be killed.\n      if (parent.namespaceURI === HTML_NAMESPACE) {\n        return tagName === 'svg';\n      }\n      // The only way to switch from MathML to SVG is via`\n      // svg if parent is either <annotation-xml> or MathML\n      // text integration points.\n      if (parent.namespaceURI === MATHML_NAMESPACE) {\n        return tagName === 'svg' && (parentTagName === 'annotation-xml' || MATHML_TEXT_INTEGRATION_POINTS[parentTagName]);\n      }\n      // We only allow elements that are defined in SVG\n      // spec. All others are disallowed in SVG namespace.\n      return Boolean(ALL_SVG_TAGS[tagName]);\n    }\n    if (element.namespaceURI === MATHML_NAMESPACE) {\n      // The only way to switch from HTML namespace to MathML\n      // is via <math>. If it happens via any other tag, then\n      // it should be killed.\n      if (parent.namespaceURI === HTML_NAMESPACE) {\n        return tagName === 'math';\n      }\n      // The only way to switch from SVG to MathML is via\n      // <math> and HTML integration points\n      if (parent.namespaceURI === SVG_NAMESPACE) {\n        return tagName === 'math' && HTML_INTEGRATION_POINTS[parentTagName];\n      }\n      // We only allow elements that are defined in MathML\n      // spec. All others are disallowed in MathML namespace.\n      return Boolean(ALL_MATHML_TAGS[tagName]);\n    }\n    if (element.namespaceURI === HTML_NAMESPACE) {\n      // The only way to switch from SVG to HTML is via\n      // HTML integration points, and from MathML to HTML\n      // is via MathML text integration points\n      if (parent.namespaceURI === SVG_NAMESPACE && !HTML_INTEGRATION_POINTS[parentTagName]) {\n        return false;\n      }\n      if (parent.namespaceURI === MATHML_NAMESPACE && !MATHML_TEXT_INTEGRATION_POINTS[parentTagName]) {\n        return false;\n      }\n      // We disallow tags that are specific for MathML\n      // or SVG and should never appear in HTML namespace\n      return !ALL_MATHML_TAGS[tagName] && (COMMON_SVG_AND_HTML_ELEMENTS[tagName] || !ALL_SVG_TAGS[tagName]);\n    }\n    // For XHTML and XML documents that support custom namespaces\n    if (PARSER_MEDIA_TYPE === 'application/xhtml+xml' && ALLOWED_NAMESPACES[element.namespaceURI]) {\n      return true;\n    }\n    // The code should never reach this place (this means\n    // that the element somehow got namespace that is not\n    // HTML, SVG, MathML or allowed via ALLOWED_NAMESPACES).\n    // Return false just in case.\n    return false;\n  };\n  /**\n   * _forceRemove\n   *\n   * @param node a DOM node\n   */\n  const _forceRemove = function _forceRemove(node) {\n    arrayPush(DOMPurify.removed, {\n      element: node\n    });\n    try {\n      // eslint-disable-next-line unicorn/prefer-dom-node-remove\n      getParentNode(node).removeChild(node);\n    } catch (_) {\n      remove(node);\n    }\n  };\n  /**\n   * _removeAttribute\n   *\n   * @param name an Attribute name\n   * @param element a DOM node\n   */\n  const _removeAttribute = function _removeAttribute(name, element) {\n    try {\n      arrayPush(DOMPurify.removed, {\n        attribute: element.getAttributeNode(name),\n        from: element\n      });\n    } catch (_) {\n      arrayPush(DOMPurify.removed, {\n        attribute: null,\n        from: element\n      });\n    }\n    element.removeAttribute(name);\n    // We void attribute values for unremovable \"is\" attributes\n    if (name === 'is') {\n      if (RETURN_DOM || RETURN_DOM_FRAGMENT) {\n        try {\n          _forceRemove(element);\n        } catch (_) {}\n      } else {\n        try {\n          element.setAttribute(name, '');\n        } catch (_) {}\n      }\n    }\n  };\n  /**\n   * _initDocument\n   *\n   * @param dirty - a string of dirty markup\n   * @return a DOM, filled with the dirty markup\n   */\n  const _initDocument = function _initDocument(dirty) {\n    /* Create a HTML document */\n    let doc = null;\n    let leadingWhitespace = null;\n    if (FORCE_BODY) {\n      dirty = '<remove></remove>' + dirty;\n    } else {\n      /* If FORCE_BODY isn't used, leading whitespace needs to be preserved manually */\n      const matches = stringMatch(dirty, /^[\\r\\n\\t ]+/);\n      leadingWhitespace = matches && matches[0];\n    }\n    if (PARSER_MEDIA_TYPE === 'application/xhtml+xml' && NAMESPACE === HTML_NAMESPACE) {\n      // Root of XHTML doc must contain xmlns declaration (see https://www.w3.org/TR/xhtml1/normative.html#strict)\n      dirty = '<html xmlns=\"http://www.w3.org/1999/xhtml\"><head></head><body>' + dirty + '</body></html>';\n    }\n    const dirtyPayload = trustedTypesPolicy ? trustedTypesPolicy.createHTML(dirty) : dirty;\n    /*\n     * Use the DOMParser API by default, fallback later if needs be\n     * DOMParser not work for svg when has multiple root element.\n     */\n    if (NAMESPACE === HTML_NAMESPACE) {\n      try {\n        doc = new DOMParser().parseFromString(dirtyPayload, PARSER_MEDIA_TYPE);\n      } catch (_) {}\n    }\n    /* Use createHTMLDocument in case DOMParser is not available */\n    if (!doc || !doc.documentElement) {\n      doc = implementation.createDocument(NAMESPACE, 'template', null);\n      try {\n        doc.documentElement.innerHTML = IS_EMPTY_INPUT ? emptyHTML : dirtyPayload;\n      } catch (_) {\n        // Syntax error if dirtyPayload is invalid xml\n      }\n    }\n    const body = doc.body || doc.documentElement;\n    if (dirty && leadingWhitespace) {\n      body.insertBefore(document.createTextNode(leadingWhitespace), body.childNodes[0] || null);\n    }\n    /* Work on whole document or just its body */\n    if (NAMESPACE === HTML_NAMESPACE) {\n      return getElementsByTagName.call(doc, WHOLE_DOCUMENT ? 'html' : 'body')[0];\n    }\n    return WHOLE_DOCUMENT ? doc.documentElement : body;\n  };\n  /**\n   * Creates a NodeIterator object that you can use to traverse filtered lists of nodes or elements in a document.\n   *\n   * @param root The root element or node to start traversing on.\n   * @return The created NodeIterator\n   */\n  const _createNodeIterator = function _createNodeIterator(root) {\n    return createNodeIterator.call(root.ownerDocument || root, root,\n    // eslint-disable-next-line no-bitwise\n    NodeFilter.SHOW_ELEMENT | NodeFilter.SHOW_COMMENT | NodeFilter.SHOW_TEXT | NodeFilter.SHOW_PROCESSING_INSTRUCTION | NodeFilter.SHOW_CDATA_SECTION, null);\n  };\n  /**\n   * _isClobbered\n   *\n   * @param element element to check for clobbering attacks\n   * @return true if clobbered, false if safe\n   */\n  const _isClobbered = function _isClobbered(element) {\n    return element instanceof HTMLFormElement && (typeof element.nodeName !== 'string' || typeof element.textContent !== 'string' || typeof element.removeChild !== 'function' || !(element.attributes instanceof NamedNodeMap) || typeof element.removeAttribute !== 'function' || typeof element.setAttribute !== 'function' || typeof element.namespaceURI !== 'string' || typeof element.insertBefore !== 'function' || typeof element.hasChildNodes !== 'function');\n  };\n  /**\n   * Checks whether the given object is a DOM node.\n   *\n   * @param value object to check whether it's a DOM node\n   * @return true is object is a DOM node\n   */\n  const _isNode = function _isNode(value) {\n    return typeof Node === 'function' && value instanceof Node;\n  };\n  function _executeHooks(hooks, currentNode, data) {\n    arrayForEach(hooks, hook => {\n      hook.call(DOMPurify, currentNode, data, CONFIG);\n    });\n  }\n  /**\n   * _sanitizeElements\n   *\n   * @protect nodeName\n   * @protect textContent\n   * @protect removeChild\n   * @param currentNode to check for permission to exist\n   * @return true if node was killed, false if left alive\n   */\n  const _sanitizeElements = function _sanitizeElements(currentNode) {\n    let content = null;\n    /* Execute a hook if present */\n    _executeHooks(hooks.beforeSanitizeElements, currentNode, null);\n    /* Check if element is clobbered or can clobber */\n    if (_isClobbered(currentNode)) {\n      _forceRemove(currentNode);\n      return true;\n    }\n    /* Now let's check the element's type and name */\n    const tagName = transformCaseFunc(currentNode.nodeName);\n    /* Execute a hook if present */\n    _executeHooks(hooks.uponSanitizeElement, currentNode, {\n      tagName,\n      allowedTags: ALLOWED_TAGS\n    });\n    /* Detect mXSS attempts abusing namespace confusion */\n    if (SAFE_FOR_XML && currentNode.hasChildNodes() && !_isNode(currentNode.firstElementChild) && regExpTest(/<[/\\w!]/g, currentNode.innerHTML) && regExpTest(/<[/\\w!]/g, currentNode.textContent)) {\n      _forceRemove(currentNode);\n      return true;\n    }\n    /* Remove any occurrence of processing instructions */\n    if (currentNode.nodeType === NODE_TYPE.progressingInstruction) {\n      _forceRemove(currentNode);\n      return true;\n    }\n    /* Remove any kind of possibly harmful comments */\n    if (SAFE_FOR_XML && currentNode.nodeType === NODE_TYPE.comment && regExpTest(/<[/\\w]/g, currentNode.data)) {\n      _forceRemove(currentNode);\n      return true;\n    }\n    /* Remove element if anything forbids its presence */\n    if (!ALLOWED_TAGS[tagName] || FORBID_TAGS[tagName]) {\n      /* Check if we have a custom element to handle */\n      if (!FORBID_TAGS[tagName] && _isBasicCustomElement(tagName)) {\n        if (CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof RegExp && regExpTest(CUSTOM_ELEMENT_HANDLING.tagNameCheck, tagName)) {\n          return false;\n        }\n        if (CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof Function && CUSTOM_ELEMENT_HANDLING.tagNameCheck(tagName)) {\n          return false;\n        }\n      }\n      /* Keep content except for bad-listed elements */\n      if (KEEP_CONTENT && !FORBID_CONTENTS[tagName]) {\n        const parentNode = getParentNode(currentNode) || currentNode.parentNode;\n        const childNodes = getChildNodes(currentNode) || currentNode.childNodes;\n        if (childNodes && parentNode) {\n          const childCount = childNodes.length;\n          for (let i = childCount - 1; i >= 0; --i) {\n            const childClone = cloneNode(childNodes[i], true);\n            childClone.__removalCount = (currentNode.__removalCount || 0) + 1;\n            parentNode.insertBefore(childClone, getNextSibling(currentNode));\n          }\n        }\n      }\n      _forceRemove(currentNode);\n      return true;\n    }\n    /* Check whether element has a valid namespace */\n    if (currentNode instanceof Element && !_checkValidNamespace(currentNode)) {\n      _forceRemove(currentNode);\n      return true;\n    }\n    /* Make sure that older browsers don't get fallback-tag mXSS */\n    if ((tagName === 'noscript' || tagName === 'noembed' || tagName === 'noframes') && regExpTest(/<\\/no(script|embed|frames)/i, currentNode.innerHTML)) {\n      _forceRemove(currentNode);\n      return true;\n    }\n    /* Sanitize element content to be template-safe */\n    if (SAFE_FOR_TEMPLATES && currentNode.nodeType === NODE_TYPE.text) {\n      /* Get the element's text content */\n      content = currentNode.textContent;\n      arrayForEach([MUSTACHE_EXPR, ERB_EXPR, TMPLIT_EXPR], expr => {\n        content = stringReplace(content, expr, ' ');\n      });\n      if (currentNode.textContent !== content) {\n        arrayPush(DOMPurify.removed, {\n          element: currentNode.cloneNode()\n        });\n        currentNode.textContent = content;\n      }\n    }\n    /* Execute a hook if present */\n    _executeHooks(hooks.afterSanitizeElements, currentNode, null);\n    return false;\n  };\n  /**\n   * _isValidAttribute\n   *\n   * @param lcTag Lowercase tag name of containing element.\n   * @param lcName Lowercase attribute name.\n   * @param value Attribute value.\n   * @return Returns true if `value` is valid, otherwise false.\n   */\n  // eslint-disable-next-line complexity\n  const _isValidAttribute = function _isValidAttribute(lcTag, lcName, value) {\n    /* Make sure attribute cannot clobber */\n    if (SANITIZE_DOM && (lcName === 'id' || lcName === 'name') && (value in document || value in formElement)) {\n      return false;\n    }\n    /* Allow valid data-* attributes: At least one character after \"-\"\n        (https://html.spec.whatwg.org/multipage/dom.html#embedding-custom-non-visible-data-with-the-data-*-attributes)\n        XML-compatible (https://html.spec.whatwg.org/multipage/infrastructure.html#xml-compatible and http://www.w3.org/TR/xml/#d0e804)\n        We don't need to check the value; it's always URI safe. */\n    if (ALLOW_DATA_ATTR && !FORBID_ATTR[lcName] && regExpTest(DATA_ATTR, lcName)) ; else if (ALLOW_ARIA_ATTR && regExpTest(ARIA_ATTR, lcName)) ; else if (!ALLOWED_ATTR[lcName] || FORBID_ATTR[lcName]) {\n      if (\n      // First condition does a very basic check if a) it's basically a valid custom element tagname AND\n      // b) if the tagName passes whatever the user has configured for CUSTOM_ELEMENT_HANDLING.tagNameCheck\n      // and c) if the attribute name passes whatever the user has configured for CUSTOM_ELEMENT_HANDLING.attributeNameCheck\n      _isBasicCustomElement(lcTag) && (CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof RegExp && regExpTest(CUSTOM_ELEMENT_HANDLING.tagNameCheck, lcTag) || CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof Function && CUSTOM_ELEMENT_HANDLING.tagNameCheck(lcTag)) && (CUSTOM_ELEMENT_HANDLING.attributeNameCheck instanceof RegExp && regExpTest(CUSTOM_ELEMENT_HANDLING.attributeNameCheck, lcName) || CUSTOM_ELEMENT_HANDLING.attributeNameCheck instanceof Function && CUSTOM_ELEMENT_HANDLING.attributeNameCheck(lcName, lcTag)) ||\n      // Alternative, second condition checks if it's an `is`-attribute, AND\n      // the value passes whatever the user has configured for CUSTOM_ELEMENT_HANDLING.tagNameCheck\n      lcName === 'is' && CUSTOM_ELEMENT_HANDLING.allowCustomizedBuiltInElements && (CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof RegExp && regExpTest(CUSTOM_ELEMENT_HANDLING.tagNameCheck, value) || CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof Function && CUSTOM_ELEMENT_HANDLING.tagNameCheck(value))) ; else {\n        return false;\n      }\n      /* Check value is safe. First, is attr inert? If so, is safe */\n    } else if (URI_SAFE_ATTRIBUTES[lcName]) ; else if (regExpTest(IS_ALLOWED_URI$1, stringReplace(value, ATTR_WHITESPACE, ''))) ; else if ((lcName === 'src' || lcName === 'xlink:href' || lcName === 'href') && lcTag !== 'script' && stringIndexOf(value, 'data:') === 0 && DATA_URI_TAGS[lcTag]) ; else if (ALLOW_UNKNOWN_PROTOCOLS && !regExpTest(IS_SCRIPT_OR_DATA, stringReplace(value, ATTR_WHITESPACE, ''))) ; else if (value) {\n      return false;\n    } else ;\n    return true;\n  };\n  /**\n   * _isBasicCustomElement\n   * checks if at least one dash is included in tagName, and it's not the first char\n   * for more sophisticated checking see https://github.com/sindresorhus/validate-element-name\n   *\n   * @param tagName name of the tag of the node to sanitize\n   * @returns Returns true if the tag name meets the basic criteria for a custom element, otherwise false.\n   */\n  const _isBasicCustomElement = function _isBasicCustomElement(tagName) {\n    return tagName !== 'annotation-xml' && stringMatch(tagName, CUSTOM_ELEMENT);\n  };\n  /**\n   * _sanitizeAttributes\n   *\n   * @protect attributes\n   * @protect nodeName\n   * @protect removeAttribute\n   * @protect setAttribute\n   *\n   * @param currentNode to sanitize\n   */\n  const _sanitizeAttributes = function _sanitizeAttributes(currentNode) {\n    /* Execute a hook if present */\n    _executeHooks(hooks.beforeSanitizeAttributes, currentNode, null);\n    const {\n      attributes\n    } = currentNode;\n    /* Check if we have attributes; if not we might have a text node */\n    if (!attributes || _isClobbered(currentNode)) {\n      return;\n    }\n    const hookEvent = {\n      attrName: '',\n      attrValue: '',\n      keepAttr: true,\n      allowedAttributes: ALLOWED_ATTR,\n      forceKeepAttr: undefined\n    };\n    let l = attributes.length;\n    /* Go backwards over all attributes; safely remove bad ones */\n    while (l--) {\n      const attr = attributes[l];\n      const {\n        name,\n        namespaceURI,\n        value: attrValue\n      } = attr;\n      const lcName = transformCaseFunc(name);\n      const initValue = attrValue;\n      let value = name === 'value' ? initValue : stringTrim(initValue);\n      /* Execute a hook if present */\n      hookEvent.attrName = lcName;\n      hookEvent.attrValue = value;\n      hookEvent.keepAttr = true;\n      hookEvent.forceKeepAttr = undefined; // Allows developers to see this is a property they can set\n      _executeHooks(hooks.uponSanitizeAttribute, currentNode, hookEvent);\n      value = hookEvent.attrValue;\n      /* Full DOM Clobbering protection via namespace isolation,\n       * Prefix id and name attributes with `user-content-`\n       */\n      if (SANITIZE_NAMED_PROPS && (lcName === 'id' || lcName === 'name')) {\n        // Remove the attribute with this value\n        _removeAttribute(name, currentNode);\n        // Prefix the value and later re-create the attribute with the sanitized value\n        value = SANITIZE_NAMED_PROPS_PREFIX + value;\n      }\n      /* Work around a security issue with comments inside attributes */\n      if (SAFE_FOR_XML && regExpTest(/((--!?|])>)|<\\/(style|title|textarea)/i, value)) {\n        _removeAttribute(name, currentNode);\n        continue;\n      }\n      /* Make sure we cannot easily use animated hrefs, even if animations are allowed */\n      if (lcName === 'attributename' && stringMatch(value, 'href')) {\n        _removeAttribute(name, currentNode);\n        continue;\n      }\n      /* Did the hooks approve of the attribute? */\n      if (hookEvent.forceKeepAttr) {\n        continue;\n      }\n      /* Did the hooks approve of the attribute? */\n      if (!hookEvent.keepAttr) {\n        _removeAttribute(name, currentNode);\n        continue;\n      }\n      /* Work around a security issue in jQuery 3.0 */\n      if (!ALLOW_SELF_CLOSE_IN_ATTR && regExpTest(/\\/>/i, value)) {\n        _removeAttribute(name, currentNode);\n        continue;\n      }\n      /* Sanitize attribute content to be template-safe */\n      if (SAFE_FOR_TEMPLATES) {\n        arrayForEach([MUSTACHE_EXPR, ERB_EXPR, TMPLIT_EXPR], expr => {\n          value = stringReplace(value, expr, ' ');\n        });\n      }\n      /* Is `value` valid for this attribute? */\n      const lcTag = transformCaseFunc(currentNode.nodeName);\n      if (!_isValidAttribute(lcTag, lcName, value)) {\n        _removeAttribute(name, currentNode);\n        continue;\n      }\n      /* Handle attributes that require Trusted Types */\n      if (trustedTypesPolicy && typeof trustedTypes === 'object' && typeof trustedTypes.getAttributeType === 'function') {\n        if (namespaceURI) ; else {\n          switch (trustedTypes.getAttributeType(lcTag, lcName)) {\n            case 'TrustedHTML':\n              {\n                value = trustedTypesPolicy.createHTML(value);\n                break;\n              }\n            case 'TrustedScriptURL':\n              {\n                value = trustedTypesPolicy.createScriptURL(value);\n                break;\n              }\n          }\n        }\n      }\n      /* Handle invalid data-* attribute set by try-catching it */\n      if (value !== initValue) {\n        try {\n          if (namespaceURI) {\n            currentNode.setAttributeNS(namespaceURI, name, value);\n          } else {\n            /* Fallback to setAttribute() for browser-unrecognized namespaces e.g. \"x-schema\". */\n            currentNode.setAttribute(name, value);\n          }\n          if (_isClobbered(currentNode)) {\n            _forceRemove(currentNode);\n          } else {\n            arrayPop(DOMPurify.removed);\n          }\n        } catch (_) {\n          _removeAttribute(name, currentNode);\n        }\n      }\n    }\n    /* Execute a hook if present */\n    _executeHooks(hooks.afterSanitizeAttributes, currentNode, null);\n  };\n  /**\n   * _sanitizeShadowDOM\n   *\n   * @param fragment to iterate over recursively\n   */\n  const _sanitizeShadowDOM = function _sanitizeShadowDOM(fragment) {\n    let shadowNode = null;\n    const shadowIterator = _createNodeIterator(fragment);\n    /* Execute a hook if present */\n    _executeHooks(hooks.beforeSanitizeShadowDOM, fragment, null);\n    while (shadowNode = shadowIterator.nextNode()) {\n      /* Execute a hook if present */\n      _executeHooks(hooks.uponSanitizeShadowNode, shadowNode, null);\n      /* Sanitize tags and elements */\n      _sanitizeElements(shadowNode);\n      /* Check attributes next */\n      _sanitizeAttributes(shadowNode);\n      /* Deep shadow DOM detected */\n      if (shadowNode.content instanceof DocumentFragment) {\n        _sanitizeShadowDOM(shadowNode.content);\n      }\n    }\n    /* Execute a hook if present */\n    _executeHooks(hooks.afterSanitizeShadowDOM, fragment, null);\n  };\n  // eslint-disable-next-line complexity\n  DOMPurify.sanitize = function (dirty) {\n    let cfg = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    let body = null;\n    let importedNode = null;\n    let currentNode = null;\n    let returnNode = null;\n    /* Make sure we have a string to sanitize.\n      DO NOT return early, as this will return the wrong type if\n      the user has requested a DOM object rather than a string */\n    IS_EMPTY_INPUT = !dirty;\n    if (IS_EMPTY_INPUT) {\n      dirty = '<!-->';\n    }\n    /* Stringify, in case dirty is an object */\n    if (typeof dirty !== 'string' && !_isNode(dirty)) {\n      if (typeof dirty.toString === 'function') {\n        dirty = dirty.toString();\n        if (typeof dirty !== 'string') {\n          throw typeErrorCreate('dirty is not a string, aborting');\n        }\n      } else {\n        throw typeErrorCreate('toString is not a function');\n      }\n    }\n    /* Return dirty HTML if DOMPurify cannot run */\n    if (!DOMPurify.isSupported) {\n      return dirty;\n    }\n    /* Assign config vars */\n    if (!SET_CONFIG) {\n      _parseConfig(cfg);\n    }\n    /* Clean up removed elements */\n    DOMPurify.removed = [];\n    /* Check if dirty is correctly typed for IN_PLACE */\n    if (typeof dirty === 'string') {\n      IN_PLACE = false;\n    }\n    if (IN_PLACE) {\n      /* Do some early pre-sanitization to avoid unsafe root nodes */\n      if (dirty.nodeName) {\n        const tagName = transformCaseFunc(dirty.nodeName);\n        if (!ALLOWED_TAGS[tagName] || FORBID_TAGS[tagName]) {\n          throw typeErrorCreate('root node is forbidden and cannot be sanitized in-place');\n        }\n      }\n    } else if (dirty instanceof Node) {\n      /* If dirty is a DOM element, append to an empty document to avoid\n         elements being stripped by the parser */\n      body = _initDocument('<!---->');\n      importedNode = body.ownerDocument.importNode(dirty, true);\n      if (importedNode.nodeType === NODE_TYPE.element && importedNode.nodeName === 'BODY') {\n        /* Node is already a body, use as is */\n        body = importedNode;\n      } else if (importedNode.nodeName === 'HTML') {\n        body = importedNode;\n      } else {\n        // eslint-disable-next-line unicorn/prefer-dom-node-append\n        body.appendChild(importedNode);\n      }\n    } else {\n      /* Exit directly if we have nothing to do */\n      if (!RETURN_DOM && !SAFE_FOR_TEMPLATES && !WHOLE_DOCUMENT &&\n      // eslint-disable-next-line unicorn/prefer-includes\n      dirty.indexOf('<') === -1) {\n        return trustedTypesPolicy && RETURN_TRUSTED_TYPE ? trustedTypesPolicy.createHTML(dirty) : dirty;\n      }\n      /* Initialize the document to work on */\n      body = _initDocument(dirty);\n      /* Check we have a DOM node from the data */\n      if (!body) {\n        return RETURN_DOM ? null : RETURN_TRUSTED_TYPE ? emptyHTML : '';\n      }\n    }\n    /* Remove first element node (ours) if FORCE_BODY is set */\n    if (body && FORCE_BODY) {\n      _forceRemove(body.firstChild);\n    }\n    /* Get node iterator */\n    const nodeIterator = _createNodeIterator(IN_PLACE ? dirty : body);\n    /* Now start iterating over the created document */\n    while (currentNode = nodeIterator.nextNode()) {\n      /* Sanitize tags and elements */\n      _sanitizeElements(currentNode);\n      /* Check attributes next */\n      _sanitizeAttributes(currentNode);\n      /* Shadow DOM detected, sanitize it */\n      if (currentNode.content instanceof DocumentFragment) {\n        _sanitizeShadowDOM(currentNode.content);\n      }\n    }\n    /* If we sanitized `dirty` in-place, return it. */\n    if (IN_PLACE) {\n      return dirty;\n    }\n    /* Return sanitized string or DOM */\n    if (RETURN_DOM) {\n      if (RETURN_DOM_FRAGMENT) {\n        returnNode = createDocumentFragment.call(body.ownerDocument);\n        while (body.firstChild) {\n          // eslint-disable-next-line unicorn/prefer-dom-node-append\n          returnNode.appendChild(body.firstChild);\n        }\n      } else {\n        returnNode = body;\n      }\n      if (ALLOWED_ATTR.shadowroot || ALLOWED_ATTR.shadowrootmode) {\n        /*\n          AdoptNode() is not used because internal state is not reset\n          (e.g. the past names map of a HTMLFormElement), this is safe\n          in theory but we would rather not risk another attack vector.\n          The state that is cloned by importNode() is explicitly defined\n          by the specs.\n        */\n        returnNode = importNode.call(originalDocument, returnNode, true);\n      }\n      return returnNode;\n    }\n    let serializedHTML = WHOLE_DOCUMENT ? body.outerHTML : body.innerHTML;\n    /* Serialize doctype if allowed */\n    if (WHOLE_DOCUMENT && ALLOWED_TAGS['!doctype'] && body.ownerDocument && body.ownerDocument.doctype && body.ownerDocument.doctype.name && regExpTest(DOCTYPE_NAME, body.ownerDocument.doctype.name)) {\n      serializedHTML = '<!DOCTYPE ' + body.ownerDocument.doctype.name + '>\\n' + serializedHTML;\n    }\n    /* Sanitize final string template-safe */\n    if (SAFE_FOR_TEMPLATES) {\n      arrayForEach([MUSTACHE_EXPR, ERB_EXPR, TMPLIT_EXPR], expr => {\n        serializedHTML = stringReplace(serializedHTML, expr, ' ');\n      });\n    }\n    return trustedTypesPolicy && RETURN_TRUSTED_TYPE ? trustedTypesPolicy.createHTML(serializedHTML) : serializedHTML;\n  };\n  DOMPurify.setConfig = function () {\n    let cfg = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    _parseConfig(cfg);\n    SET_CONFIG = true;\n  };\n  DOMPurify.clearConfig = function () {\n    CONFIG = null;\n    SET_CONFIG = false;\n  };\n  DOMPurify.isValidAttribute = function (tag, attr, value) {\n    /* Initialize shared config vars if necessary. */\n    if (!CONFIG) {\n      _parseConfig({});\n    }\n    const lcTag = transformCaseFunc(tag);\n    const lcName = transformCaseFunc(attr);\n    return _isValidAttribute(lcTag, lcName, value);\n  };\n  DOMPurify.addHook = function (entryPoint, hookFunction) {\n    if (typeof hookFunction !== 'function') {\n      return;\n    }\n    arrayPush(hooks[entryPoint], hookFunction);\n  };\n  DOMPurify.removeHook = function (entryPoint, hookFunction) {\n    if (hookFunction !== undefined) {\n      const index = arrayLastIndexOf(hooks[entryPoint], hookFunction);\n      return index === -1 ? undefined : arraySplice(hooks[entryPoint], index, 1)[0];\n    }\n    return arrayPop(hooks[entryPoint]);\n  };\n  DOMPurify.removeHooks = function (entryPoint) {\n    hooks[entryPoint] = [];\n  };\n  DOMPurify.removeAllHooks = function () {\n    hooks = _createHooksMap();\n  };\n  return DOMPurify;\n}\nvar purify = createDOMPurify();\n\nexport { purify as default };\n//# sourceMappingURL=purify.es.mjs.map\n","import { marked } from 'marked';\nimport DOMPurify from 'dompurify';\n\n// Configure marked for safe HTML rendering\nmarked.setOptions({\n  breaks: true,\n  gfm: true,\n  headerIds: true,\n  mangle: false,\n  sanitize: false, // Allow HTML in markdown\n  smartypants: false,\n  pedantic: false\n});\n\n// Global copy function for prompt buttons\nwindow.copyPromptText = function(text) {\n  navigator.clipboard.writeText(text).then(() => {\n    // Show success feedback\n    alert('✅ Prompt copied to clipboard!');\n  }).catch(() => {\n    // Fallback for older browsers\n    const textArea = document.createElement('textarea');\n    textArea.value = text;\n    document.body.appendChild(textArea);\n    textArea.select();\n    document.execCommand('copy');\n    document.body.removeChild(textArea);\n    alert('✅ Prompt copied to clipboard!');\n  });\n};\n\n// Global Alpine.js data function\nwindow.learningLab = function() {\n  return {\n    // State\n    exercises: [],\n    currentExercise: null,\n    currentSection: null,\n    currentExerciseData: null,\n    currentSectionContent: '',\n    showOverview: false,\n    showBehindScenes: false,\n    showJourney: false,\n    behindScenesContent: '',\n    progress: {},\n    journeyData: {\n      filesModified: '',\n      biggestChallenge: '',\n      keyCodeSnippet: '',\n      patternsDiscovered: '',\n      wouldDoDifferently: '',\n      rating: 0,\n      timeline: []\n    },\n    showCopySuccess: false,\n    \n    // Computed properties\n    get progressText() {\n      if (!this.currentExercise) return '';\n      const completed = this.getCompletedSections().length;\n      const total = this.currentExerciseData?.sections?.length || 0;\n      return `${completed} of ${total} sections`;\n    },\n    \n    get progressPercent() {\n      if (!this.currentExercise) return 0;\n      const completed = this.getCompletedSections().length;\n      const total = this.currentExerciseData?.sections?.length || 0;\n      return total > 0 ? Math.round((completed / total) * 100) : 0;\n    },\n    \n    get hasPreviousSection() {\n      return this.getCurrentSectionIndex() > 0;\n    },\n    \n    get hasNextSection() {\n      const current = this.getCurrentSectionIndex();\n      const total = this.currentExerciseData?.sections?.length || 0;\n      return current < total - 1;\n    },\n    \n    get isLastSection() {\n      const current = this.getCurrentSectionIndex();\n      const total = this.currentExerciseData?.sections?.length || 0;\n      return current === total - 1;\n    },\n    \n    get canProceed() {\n      // For now, always allow proceeding\n      // Can add validation logic here later\n      return true;\n    },\n\n    // Initialization\n    async init() {\n      await this.loadExercises();\n      this.loadProgress();\n      await this.loadBehindScenes();\n      \n      // Check if we should resume an exercise\n      const urlParams = new URLSearchParams(window.location.search);\n      const exerciseId = urlParams.get('exercise');\n      const sectionId = urlParams.get('section');\n      \n      if (exerciseId) {\n        await this.startExercise(exerciseId);\n        if (sectionId) {\n          this.navigateToSection(sectionId);\n        }\n      }\n    },\n    \n    async loadExercises() {\n      try {\n        // Load exercise manifest\n        const response = await fetch('/exercises/manifest.json');\n        const data = await response.json();\n        this.exercises = data.exercises;\n      } catch (error) {\n        console.error('Failed to load exercises:', error);\n        // Fallback to demo data\n        this.exercises = this.getDemoExercises();\n      }\n    },\n    \n    loadProgress() {\n      const saved = localStorage.getItem('learning-lab-progress');\n      this.progress = saved ? JSON.parse(saved) : {};\n    },\n    \n    saveProgress() {\n      localStorage.setItem('learning-lab-progress', JSON.stringify(this.progress));\n    },\n\n    async loadBehindScenes() {\n      try {\n        const response = await fetch('/src/behind-the-scenes.md');\n        if (response.ok) {\n          const content = await response.text();\n          const rawHtml = marked(content);\n          this.behindScenesContent = DOMPurify.sanitize(rawHtml);\n        }\n      } catch (error) {\n        console.error('Failed to load behind the scenes content:', error);\n        this.behindScenesContent = '<p>Behind the scenes content is loading...</p>';\n      }\n    },\n    \n    // Exercise management\n    async startExercise(exerciseId) {\n      this.currentExercise = exerciseId;\n      this.showOverview = false;\n      \n      // Load exercise data\n      this.currentExerciseData = this.exercises.find(ex => ex.id === exerciseId);\n      \n      if (!this.currentExerciseData) {\n        console.error('Exercise not found:', exerciseId);\n        return;\n      }\n      \n      // Load exercise content\n      await this.loadExerciseContent();\n\n      // Load journey data\n      this.loadJourneyData();\n\n      // Navigate to first incomplete section or first section\n      const lastSection = this.getLastViewedSection(exerciseId);\n      const firstIncomplete = this.getFirstIncompleteSection(exerciseId);\n\n      this.navigateToSection(lastSection || firstIncomplete || this.currentExerciseData.sections[0].id);\n      \n      // Update URL\n      this.updateURL();\n    },\n    \n    async loadExerciseContent() {\n      // Load markdown content for each section\n      for (const section of this.currentExerciseData.sections) {\n        if (!section.content) {\n          try {\n            // Map exercise ID to folder name\n            const folderName = this.currentExercise === '01-fundamentals' ? '01-fundamentals' : this.currentExercise;\n            const response = await fetch(`/exercises/${folderName}/${section.id}.md`);\n            if (response.ok) {\n              section.content = await response.text();\n            } else {\n              section.content = this.getFallbackContent(section);\n            }\n          } catch (error) {\n            console.error(`Failed to load section ${section.id}:`, error);\n            section.content = this.getFallbackContent(section);\n          }\n        }\n      }\n    },\n    \n    navigateToSection(sectionId) {\n      this.currentSection = sectionId;\n      const section = this.currentExerciseData.sections.find(s => s.id === sectionId);\n      \n      if (section) {\n        // Render markdown content\n        const rawHtml = marked(section.content || '');\n        // Use DOMPurify for content\n        this.currentSectionContent = DOMPurify.sanitize(rawHtml);\n\n        // Mark as viewed\n        this.markSectionViewed(sectionId);\n\n        // Update URL\n        this.updateURL();\n\n        // Scroll to top\n        window.scrollTo(0, 0);\n\n        // Post-process to add copy buttons after DOM updates\n        this.$nextTick(() => {\n          this.addCopyButtons();\n        });\n      }\n    },\n    \n    previousSection() {\n      const currentIndex = this.getCurrentSectionIndex();\n      if (currentIndex > 0) {\n        const prevSection = this.currentExerciseData.sections[currentIndex - 1];\n        this.navigateToSection(prevSection.id);\n      }\n    },\n    \n    nextSection() {\n      const currentIndex = this.getCurrentSectionIndex();\n      const total = this.currentExerciseData.sections.length;\n      \n      if (currentIndex < total - 1) {\n        // Mark current section as completed\n        this.markSectionCompleted(this.currentSection);\n        \n        const nextSection = this.currentExerciseData.sections[currentIndex + 1];\n        this.navigateToSection(nextSection.id);\n      }\n    },\n    \n    completeExercise() {\n      // Mark current section and exercise as completed\n      this.markSectionCompleted(this.currentSection);\n      this.markExerciseCompleted(this.currentExercise);\n      \n      // Show completion message and return to overview\n      alert('🎉 Congratulations! You\\'ve completed this exercise!');\n      this.showOverview = true;\n    },\n    \n    // Progress tracking\n    markSectionViewed(sectionId) {\n      if (!this.progress[this.currentExercise]) {\n        this.progress[this.currentExercise] = { sections: {}, lastViewed: null };\n      }\n      \n      this.progress[this.currentExercise].lastViewed = sectionId;\n      \n      if (!this.progress[this.currentExercise].sections[sectionId]) {\n        this.progress[this.currentExercise].sections[sectionId] = {\n          viewed: true,\n          viewedAt: new Date().toISOString()\n        };\n      }\n      \n      this.saveProgress();\n    },\n    \n    markSectionCompleted(sectionId) {\n      if (!this.progress[this.currentExercise]) {\n        this.progress[this.currentExercise] = { sections: {} };\n      }\n      \n      this.progress[this.currentExercise].sections[sectionId] = {\n        ...this.progress[this.currentExercise].sections[sectionId],\n        completed: true,\n        completedAt: new Date().toISOString()\n      };\n      \n      this.saveProgress();\n    },\n    \n    markExerciseCompleted(exerciseId) {\n      if (!this.progress[exerciseId]) {\n        this.progress[exerciseId] = { sections: {} };\n      }\n      \n      this.progress[exerciseId].completed = true;\n      this.progress[exerciseId].completedAt = new Date().toISOString();\n      \n      this.saveProgress();\n    },\n    \n    // Helper methods\n    getCurrentSectionIndex() {\n      return this.currentExerciseData?.sections?.findIndex(s => s.id === this.currentSection) || 0;\n    },\n    \n    getCompletedSections() {\n      if (!this.currentExercise || !this.progress[this.currentExercise]) return [];\n      const sections = this.progress[this.currentExercise].sections || {};\n      return Object.keys(sections).filter(id => sections[id].completed);\n    },\n    \n    getLastViewedSection(exerciseId) {\n      return this.progress[exerciseId]?.lastViewed;\n    },\n    \n    getFirstIncompleteSection(exerciseId) {\n      if (!this.currentExerciseData) return null;\n      \n      const sections = this.progress[exerciseId]?.sections || {};\n      return this.currentExerciseData.sections.find(section => \n        !sections[section.id]?.completed\n      )?.id;\n    },\n    \n    isSectionCompleted(sectionId) {\n      return this.progress[this.currentExercise]?.sections?.[sectionId]?.completed || false;\n    },\n    \n    getSectionIcon(sectionId) {\n      if (this.currentSection === sectionId) return '▶️';\n      if (this.isSectionCompleted(sectionId)) return '✅';\n      return '○';\n    },\n    \n    getExerciseStatus(exerciseId) {\n      if (this.progress[exerciseId]?.completed) return 'completed';\n      if (this.progress[exerciseId]?.sections && Object.keys(this.progress[exerciseId].sections).length > 0) return 'in-progress';\n      return 'not-started';\n    },\n    \n    getExerciseProgress(exerciseId) {\n      const exercise = this.exercises.find(ex => ex.id === exerciseId);\n      if (!exercise) return 0;\n      \n      const sections = this.progress[exerciseId]?.sections || {};\n      const completed = Object.keys(sections).filter(id => sections[id].completed).length;\n      const total = exercise.sections?.length || 0;\n      \n      return total > 0 ? Math.round((completed / total) * 100) : 0;\n    },\n    \n    getActionText(exerciseId) {\n      const status = this.getExerciseStatus(exerciseId);\n      switch (status) {\n        case 'completed': return 'Review Exercise';\n        case 'in-progress': return 'Continue';\n        default: return 'Start Exercise';\n      }\n    },\n    \n    updateURL() {\n      const params = new URLSearchParams();\n      if (this.currentExercise) {\n        params.set('exercise', this.currentExercise);\n        if (this.currentSection) {\n          params.set('section', this.currentSection);\n        }\n      }\n      \n      const newURL = params.toString() ? `?${params.toString()}` : '/';\n      window.history.replaceState({}, '', newURL);\n    },\n    \n    getFallbackContent(section) {\n      return `# ${section.title}\\n\\nContent for this section is being loaded...\\n\\nPlease check back soon or refer to the exercise materials in the repository.`;\n    },\n    \n    getDemoExercises() {\n      return [\n        {\n          id: '01-fundamentals',\n          title: 'Claude Code Fundamentals',\n          description: 'Master project structure and context management for multi-agent workflows',\n          duration: '2 hours',\n          difficulty: 'Beginner',\n          objectives: [\n            'Understand hierarchical context management',\n            'Create agent isolation patterns',\n            'Implement session handoff procedures',\n            'Build reusable project templates'\n          ],\n          sections: [\n            {\n              id: 'overview',\n              title: 'Exercise Overview',\n              type: 'reading'\n            },\n            {\n              id: 'setup',\n              title: 'Project Setup',\n              type: 'action'\n            },\n            {\n              id: 'context-management',\n              title: 'Context Management',\n              type: 'action'\n            },\n            {\n              id: 'testing',\n              title: 'Testing & Validation',\n              type: 'action'\n            },\n            {\n              id: 'reflection',\n              title: 'Knowledge Extraction',\n              type: 'reflection'\n            }\n          ]\n        }\n      ];\n    },\n\n    // Journey tracking methods\n    getTimeSpent() {\n      const exerciseProgress = this.progress[this.currentExercise];\n      if (!exerciseProgress) return '0 min';\n\n      const sections = exerciseProgress.sections || {};\n      const times = Object.values(sections)\n        .map(s => s.viewedAt || s.completedAt)\n        .filter(Boolean)\n        .map(t => new Date(t).getTime());\n\n      if (times.length < 2) return '< 5 min';\n\n      const totalMs = Math.max(...times) - Math.min(...times);\n      const minutes = Math.round(totalMs / 60000);\n\n      if (minutes < 60) return `${minutes} min`;\n      const hours = Math.floor(minutes / 60);\n      const remainingMin = minutes % 60;\n      return `${hours}h ${remainingMin}m`;\n    },\n\n    getRatingText() {\n      const ratings = {\n        0: 'Not rated',\n        1: '⭐ Needs improvement',\n        2: '⭐⭐ Getting there',\n        3: '⭐⭐⭐ Good work!',\n        4: '⭐⭐⭐⭐ Excellent!',\n        5: '⭐⭐⭐⭐⭐ Outstanding!'\n      };\n      return ratings[this.journeyData.rating] || 'Not rated';\n    },\n\n    addTimelineEntry(action) {\n      this.journeyData.timeline.push({\n        timestamp: new Date().toISOString(),\n        section: this.currentExerciseData?.sections?.find(s => s.id === this.currentSection)?.title || 'Unknown',\n        action: action\n      });\n      this.saveJourneyData();\n    },\n\n    saveJourney() {\n      this.saveJourneyData();\n      alert('✅ Journey saved successfully!');\n    },\n\n    saveJourneyData() {\n      const journeyKey = `journey-${this.currentExercise}`;\n      localStorage.setItem(journeyKey, JSON.stringify(this.journeyData));\n    },\n\n    loadJourneyData() {\n      const journeyKey = `journey-${this.currentExercise}`;\n      const saved = localStorage.getItem(journeyKey);\n      if (saved) {\n        this.journeyData = { ...this.journeyData, ...JSON.parse(saved) };\n      }\n    },\n\n    exportJourney() {\n      const exercise = this.currentExerciseData;\n      const exportData = {\n        exercise: exercise.title,\n        completed: new Date().toLocaleDateString(),\n        progress: `${this.progressPercent}% (${this.getCompletedSections().length}/${exercise.sections.length} sections)`,\n        timeSpent: this.getTimeSpent(),\n        rating: this.getRatingText(),\n        ...this.journeyData\n      };\n\n      const content = `# Implementation Journey: ${exercise.title}\n\n**Completed:** ${exportData.completed}\n**Progress:** ${exportData.progress}\n**Time Spent:** ${exportData.timeSpent}\n**Rating:** ${exportData.rating}\n\n## Files Modified\n${exportData.filesModified || 'Not specified'}\n\n## Biggest Challenge\n${exportData.biggestChallenge || 'Not specified'}\n\n## Key Code Snippet\n\\`\\`\\`\n${exportData.keyCodeSnippet || 'Not provided'}\n\\`\\`\\`\n\n## Patterns Discovered\n${exportData.patternsDiscovered || 'Not specified'}\n\n## What I'd Do Differently\n${exportData.wouldDoDifferently || 'Not specified'}\n\n## Implementation Timeline\n${exportData.timeline.map(entry =>\n  `- **${this.formatTime(entry.timestamp)}** ${entry.section}: ${entry.action}`\n).join('\\n')}\n\n---\n*Generated by Claude Multi-Agent Learning Lab*`;\n\n      const blob = new Blob([content], { type: 'text/markdown' });\n      const url = URL.createObjectURL(blob);\n      const a = document.createElement('a');\n      a.href = url;\n      a.download = `journey-${this.currentExercise}.md`;\n      a.click();\n      URL.revokeObjectURL(url);\n    },\n\n    formatTime(timestamp) {\n      return new Date(timestamp).toLocaleTimeString([], {\n        hour: '2-digit',\n        minute: '2-digit'\n      });\n    },\n\n    // Start Over functionality\n    startOver(exerciseId) {\n      if (confirm('🔄 Are you sure you want to start this exercise over? This will reset all progress and clear your journey documentation.')) {\n        // Clear progress data\n        delete this.progress[exerciseId];\n        this.saveProgress();\n\n        // Clear journey data\n        const journeyKey = `journey-${exerciseId}`;\n        localStorage.removeItem(journeyKey);\n\n        // Reset journey data in memory\n        this.journeyData = {\n          filesModified: '',\n          biggestChallenge: '',\n          keyCodeSnippet: '',\n          patternsDiscovered: '',\n          wouldDoDifferently: '',\n          rating: 0,\n          timeline: []\n        };\n\n        // If currently in this exercise, restart it\n        if (this.currentExercise === exerciseId) {\n          this.currentSection = null;\n          this.currentSectionContent = '';\n          this.showJourney = false;\n          this.showOverview = false;\n\n          // Start fresh\n          this.startExercise(exerciseId);\n        }\n\n        alert('✅ Exercise reset successfully! Starting fresh.');\n      }\n    },\n\n    // Copy functionality for starter prompts\n    copyStarterPrompt(promptText) {\n      navigator.clipboard.writeText(promptText).then(() => {\n        // Show success feedback\n        this.showCopySuccess = true;\n        setTimeout(() => {\n          this.showCopySuccess = false;\n        }, 2000);\n      }).catch(() => {\n        // Fallback for older browsers\n        const textArea = document.createElement('textarea');\n        textArea.value = promptText;\n        document.body.appendChild(textArea);\n        textArea.select();\n        document.execCommand('copy');\n        document.body.removeChild(textArea);\n\n        this.showCopySuccess = true;\n        setTimeout(() => {\n          this.showCopySuccess = false;\n        }, 2000);\n      });\n    },\n\n    // Post-process to add copy buttons\n    addCopyButtons() {\n      const sectionContent = document.querySelector('.section-content');\n      if (!sectionContent) {\n        console.log('No section content found');\n        return;\n      }\n\n      console.log('Section content found, checking for markers...');\n      const originalHTML = sectionContent.innerHTML;\n\n      // Find all [COPY_BUTTON] markers\n      const copyMarkers = originalHTML.split('[COPY_BUTTON]');\n      console.log('Copy markers found:', copyMarkers.length - 1);\n\n      if (copyMarkers.length > 1) {\n        console.log('Processing copy button markers...');\n\n        // Simple approach: find the most recent code block and add button after it\n        const codeBlocks = sectionContent.querySelectorAll('code');\n        console.log('Code blocks found:', codeBlocks.length);\n\n        if (codeBlocks.length > 0) {\n          // Get the first code block (which should be our starter prompt)\n          const firstCodeBlock = codeBlocks[0];\n          const promptText = firstCodeBlock.textContent.trim();\n          console.log('Prompt text found:', promptText.substring(0, 50) + '...');\n\n          // Create copy button\n          const buttonContainer = document.createElement('div');\n          buttonContainer.className = 'starter-prompt-container';\n          buttonContainer.innerHTML = `\n            <button\n              class=\"copy-button\"\n              onclick=\"window.copyPromptText(\\`${promptText.replace(/`/g, '\\\\`')}\\`)\"\n            >\n              📋 Copy\n            </button>\n          `;\n\n          // Insert after the code block's parent paragraph\n          const codeParent = firstCodeBlock.closest('p') || firstCodeBlock.parentElement;\n          if (codeParent && codeParent.nextSibling) {\n            codeParent.parentNode.insertBefore(buttonContainer, codeParent.nextSibling);\n          } else if (codeParent) {\n            codeParent.parentNode.appendChild(buttonContainer);\n          }\n\n          console.log('Copy button added successfully');\n        }\n      }\n    }\n  };\n};"],"names":["_getDefaults","_defaults","changeDefaults","newDefaults","escapeTest","escapeReplace","escapeTestNoEncode","escapeReplaceNoEncode","escapeReplacements","getEscapeReplacement","ch","escape$1","html","encode","unescapeTest","unescape","_","n","caret","edit","regex","opt","source","obj","name","val","valSource","cleanUrl","href","noopTest","splitCells","tableRow","count","row","match","offset","str","escaped","curr","cells","rtrim","c","invert","l","suffLen","findClosingBracket","b","level","i","outputLink","cap","link","raw","lexer","title","text","token","indentCodeCompensation","matchIndentToCode","indentToCode","node","matchIndentInNode","indentInNode","_Tokenizer","options","__publicField","src","trimmed","top","tokens","bull","isordered","list","itemRegex","itemContents","endsWithBlankLine","endEarly","line","t","nextLine","indent","blankLine","nextBulletRegex","hrRegex","fencesBeginRegex","headingBeginRegex","rawLine","istask","ischecked","spacers","hasMultipleLineBreaks","tag","headers","aligns","rows","item","align","header","cell","trimmedUrl","rtrimSlash","lastParenIndex","linkLen","links","linkString","maskedSrc","prevChar","lLength","rDelim","rLength","delimTotal","midDelimTotal","endReg","lastCharLength","hasNonSpaceChars","hasSpaceCharsOnBothEnds","prevCapZero","_a","newline","blockCode","fences","hr","heading","bullet","lheading","_paragraph","blockText","_blockLabel","def","_tag","_comment","paragraph","blockquote","blockNormal","gfmTable","blockGfm","blockPedantic","escape","inlineCode","br","inlineText","_punctuation","punctuation","blockSkip","emStrongLDelim","emStrongRDelimAst","emStrongRDelimUnd","anyPunctuation","autolink","_inlineComment","_inlineLabel","reflink","nolink","reflinkSearch","inlineNormal","inlinePedantic","inlineGfm","inlineBreaks","block","inline","_Lexer","rules","next","leading","tabs","lastToken","cutSrc","lastParagraphClipped","extTokenizer","startIndex","tempSrc","tempStart","getStartIndex","errMsg","keepPrevChar","_Renderer","code","infostring","lang","quote","body","ordered","start","type","startatt","task","checked","content","flags","cleanHref","out","_TextRenderer","_Parser","genericToken","ret","headingToken","codeToken","tableToken","j","k","blockquoteToken","listToken","loose","itemBody","checkbox","htmlToken","paragraphToken","textToken","renderer","escapeToken","tagToken","linkToken","imageToken","strongToken","emToken","codespanToken","delToken","_Hooks","markdown","Marked","args","__privateAdd","_Marked_instances","__privateMethod","parseMarkdown_fn","callback","values","_b","childTokens","extensions","pack","opts","ext","prevRenderer","extLevel","prop","rendererProp","rendererFunc","tokenizer","tokenizerProp","tokenizerFunc","prevTokenizer","hooks","hooksProp","hooksFunc","prevHook","arg","walkTokens","packWalktokens","parser","origOpt","throwError","onError_fn","e","silent","async","msg","markedInstance","marked","entries","setPrototypeOf","isFrozen","getPrototypeOf","getOwnPropertyDescriptor","freeze","seal","create","apply","construct","x","func","thisArg","_len","_key","Func","_len2","_key2","arrayForEach","unapply","arrayLastIndexOf","arrayPop","arrayPush","arraySplice","stringToLowerCase","stringToString","stringMatch","stringReplace","stringIndexOf","stringTrim","objectHasOwnProperty","regExpTest","typeErrorCreate","unconstruct","_len3","_key3","_len4","_key4","addToSet","set","array","transformCaseFunc","element","lcElement","cleanArray","index","clone","object","newObject","property","value","lookupGetter","desc","fallbackValue","html$1","svg$1","svgFilters","svgDisallowed","mathMl$1","mathMlDisallowed","svg","mathMl","xml","MUSTACHE_EXPR","ERB_EXPR","TMPLIT_EXPR","DATA_ATTR","ARIA_ATTR","IS_ALLOWED_URI","IS_SCRIPT_OR_DATA","ATTR_WHITESPACE","DOCTYPE_NAME","CUSTOM_ELEMENT","EXPRESSIONS","NODE_TYPE","getGlobal","_createTrustedTypesPolicy","trustedTypes","purifyHostElement","suffix","ATTR_NAME","policyName","scriptUrl","_createHooksMap","createDOMPurify","window","DOMPurify","root","document","originalDocument","currentScript","DocumentFragment","HTMLTemplateElement","Node","Element","NodeFilter","NamedNodeMap","HTMLFormElement","DOMParser","ElementPrototype","cloneNode","remove","getNextSibling","getChildNodes","getParentNode","template","trustedTypesPolicy","emptyHTML","implementation","createNodeIterator","createDocumentFragment","getElementsByTagName","importNode","IS_ALLOWED_URI$1","ALLOWED_TAGS","DEFAULT_ALLOWED_TAGS","ALLOWED_ATTR","DEFAULT_ALLOWED_ATTR","CUSTOM_ELEMENT_HANDLING","FORBID_TAGS","FORBID_ATTR","ALLOW_ARIA_ATTR","ALLOW_DATA_ATTR","ALLOW_UNKNOWN_PROTOCOLS","ALLOW_SELF_CLOSE_IN_ATTR","SAFE_FOR_TEMPLATES","SAFE_FOR_XML","WHOLE_DOCUMENT","SET_CONFIG","FORCE_BODY","RETURN_DOM","RETURN_DOM_FRAGMENT","RETURN_TRUSTED_TYPE","SANITIZE_DOM","SANITIZE_NAMED_PROPS","SANITIZE_NAMED_PROPS_PREFIX","KEEP_CONTENT","IN_PLACE","USE_PROFILES","FORBID_CONTENTS","DEFAULT_FORBID_CONTENTS","DATA_URI_TAGS","DEFAULT_DATA_URI_TAGS","URI_SAFE_ATTRIBUTES","DEFAULT_URI_SAFE_ATTRIBUTES","MATHML_NAMESPACE","SVG_NAMESPACE","HTML_NAMESPACE","NAMESPACE","IS_EMPTY_INPUT","ALLOWED_NAMESPACES","DEFAULT_ALLOWED_NAMESPACES","MATHML_TEXT_INTEGRATION_POINTS","HTML_INTEGRATION_POINTS","COMMON_SVG_AND_HTML_ELEMENTS","PARSER_MEDIA_TYPE","SUPPORTED_PARSER_MEDIA_TYPES","DEFAULT_PARSER_MEDIA_TYPE","CONFIG","formElement","isRegexOrFunction","testValue","_parseConfig","cfg","ALL_SVG_TAGS","ALL_MATHML_TAGS","_checkValidNamespace","parent","tagName","parentTagName","_forceRemove","_removeAttribute","_initDocument","dirty","doc","leadingWhitespace","matches","dirtyPayload","_createNodeIterator","_isClobbered","_isNode","_executeHooks","currentNode","data","hook","_sanitizeElements","_isBasicCustomElement","parentNode","childNodes","childCount","childClone","expr","_isValidAttribute","lcTag","lcName","_sanitizeAttributes","attributes","hookEvent","attr","namespaceURI","attrValue","initValue","_sanitizeShadowDOM","fragment","shadowNode","shadowIterator","importedNode","returnNode","nodeIterator","serializedHTML","entryPoint","hookFunction","purify","textArea","completed","total","current","urlParams","exerciseId","sectionId","error","saved","response","rawHtml","ex","lastSection","firstIncomplete","section","folderName","s","currentIndex","prevSection","nextSection","sections","id","_c","exercise","params","newURL","exerciseProgress","times","totalMs","minutes","hours","remainingMin","action","journeyKey","exportData","entry","blob","url","a","timestamp","promptText","sectionContent","copyMarkers","codeBlocks","firstCodeBlock","buttonContainer","codeParent"],"mappings":"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","x_google_ignoreList":[0,1]}